upstream ersatz_app {
    server unix:/srv/www/ersatz/run/gunicorn.sock fail_timeout=0;
}

server {
    listen   80;
    server_name 54.86.111.206;
    keepalive_timeout 15;

    set $root /srv/www/ersatz;
    # no security problem here, since / is alway passed to upstream
    root $root;

    location ~ ^/media/datafiles/ {
        allow 127.0.0.1;
        allow 54.86.111.206;
        deny all;
    }

    # serve directly - analogous for static/staticfiles
    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
	expires 30d;
    }

    location / {
	client_max_body_size 100m;
	proxy_pass_header Server;
	proxy_set_header Host $http_host;
	proxy_redirect off;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Scheme $scheme;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_connect_timeout 10;
	proxy_read_timeout 10;
	proxy_pass http://ersatz_app;
    }

    location /api/data/ {
	client_max_body_size 1024m;
	proxy_pass_header Server;
	proxy_set_header Host $http_host;
	proxy_redirect off;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Scheme $scheme;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_connect_timeout 10;
	proxy_read_timeout 10;
	proxy_pass http://ersatz_app;
    }

    location /sockjs/ {
     	proxy_http_version 1.1;
	proxy_pass_header Server;
	proxy_set_header Host $http_host;
	proxy_redirect off;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Scheme $scheme;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
	proxy_pass http://127.0.0.1:8887;
    }

    # what to serve if upstream is not available or crashes
    error_page 500 503 504 /50x.html; #need to create
    error_page 502 /502.html;
    location = /50x.html {
	root    $root/nginx;
    }
    location = /502.html {
	root    $root/nginx;
    }

}
