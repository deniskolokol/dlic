!function(a){a.fn.bootstrapSwitch=function(c){var b={init:function(){return this.each(function(){var p=a(this),m,f,l,o,q=p.closest("form"),h="",g=p.attr("class"),i,d,j="ON",e="OFF",n=false;a.each(["switch-mini","switch-small","switch-large"],function(r,s){if(g.indexOf(s)>=0){h=s}});p.addClass("has-switch");if(p.data("on")!==undefined){i="switch-"+p.data("on")}if(p.data("on-label")!==undefined){j=p.data("on-label")}if(p.data("off-label")!==undefined){e=p.data("off-label")}if(p.data("icon")!==undefined){n=p.data("icon")}f=a("<span>").addClass("switch-left").addClass(h).addClass(i).html(j);i="";if(p.data("off")!==undefined){i="switch-"+p.data("off")}l=a("<span>").addClass("switch-right").addClass(h).addClass(i).html(e);o=a("<label>").html("&nbsp;").addClass(h).attr("for",p.find("input").attr("id"));if(n){o.html('<i class="icon icon-'+n+'"></i>')}m=p.find("input").wrap(a("<div>")).parent().data("animated",false);if(p.data("animated")!==false){m.addClass("switch-animate").data("animated",true)}m.append(f).append(o).append(l);p.find(">div").addClass(p.find("input").is(":checked")?"switch-on":"switch-off");if(p.find("input").is(":disabled")){a(this).addClass("deactivate")}var k=function(r){r.siblings("label").trigger("mousedown").trigger("mouseup").trigger("click")};p.on("keydown",function(r){if(r.keyCode===32){r.stopImmediatePropagation();r.preventDefault();k(a(r.target).find("span:first"))}});f.on("click",function(r){k(a(this))});l.on("click",function(r){k(a(this))});p.find("input").on("change",function(w,u){var v=a(this),s=v.parent(),r=v.is(":checked"),t=s.is(".switch-off");w.preventDefault();s.css("left","");if(t===r){if(r){s.removeClass("switch-off").addClass("switch-on")}else{s.removeClass("switch-on").addClass("switch-off")}if(s.data("animated")!==false){s.addClass("switch-animate")}if(typeof u==="boolean"&&u){return}s.parent().trigger("switch-change",{el:v,value:r})}});p.find("label").on("mousedown touchstart",function(s){var r=a(this);d=false;s.preventDefault();s.stopImmediatePropagation();r.closest("div").removeClass("switch-animate");if(r.closest(".has-switch").is(".deactivate")){r.unbind("click")}else{r.on("mousemove touchmove",function(y){var t=a(this).closest(".switch"),v=(y.pageX||y.originalEvent.targetTouches[0].pageX)-t.offset().left,w=(v/t.width())*100,x=25,u=75;d=true;if(w<x){w=x}else{if(w>u){w=u}}t.find(">div").css("left",(w-u)+"%")});r.on("click touchend",function(w){var v=a(this),t=a(w.target),u=t.siblings("input");w.stopImmediatePropagation();w.preventDefault();v.unbind("mouseleave");if(d){u.prop("checked",!(parseInt(v.parent().css("left"))<-25))}else{u.prop("checked",!u.is(":checked"))}d=false;u.trigger("change")});r.on("mouseleave",function(v){var u=a(this),t=u.siblings("input");v.preventDefault();v.stopImmediatePropagation();u.unbind("mouseleave");u.trigger("mouseup");t.prop("checked",!(parseInt(u.parent().css("left"))<-25)).trigger("change")});r.on("mouseup",function(t){t.stopImmediatePropagation();t.preventDefault();a(this).unbind("mousemove")})}});if(q.data("bootstrapSwitch")!=="injected"){q.bind("reset",function(){setTimeout(function(){q.find(".switch").each(function(){var r=a(this).find("input");r.prop("checked",r.is(":checked")).trigger("change")})},1)});q.data("bootstrapSwitch","injected")}})},toggleActivation:function(){var d=a(this);d.toggleClass("deactivate");d.find("input:checkbox").attr("disabled",d.is(".deactivate"))},isActive:function(){return!a(this).hasClass("deactivate")},setActive:function(e){var d=a(this);if(e){d.removeClass("deactivate");d.find("input:checkbox").attr("disabled",false)}else{d.addClass("deactivate");d.find("input:checkbox").attr("disabled",true)}},toggleState:function(d){var e=a(this).find("input[type=checkbox]");e.prop("checked",!e.is(":checked")).trigger("change",d)},toggleRadioState:function(d){a(this).find("input[type=radio]").not(":checked").trigger("change",d)},setState:function(e,d){a(this).find("input").prop("checked",e).trigger("change",d)},status:function(){return a(this).find("input").is(":checked")},destroy:function(){var f=a(this),e=f.find("div"),g=f.closest("form"),d;e.find(":not(input)").remove();d=e.children();d.unwrap().unwrap();d.unbind("change");if(g){g.unbind("reset");g.removeData("bootstrapSwitch")}return d}};if(b[c]){return b[c].apply(this,Array.prototype.slice.call(arguments,1))}else{if(typeof c==="object"||!c){return b.init.apply(this,arguments)}else{a.error("Method "+c+" does not exist!")}}}}(jQuery);(function(){jQuery(".switch")["bootstrapSwitch"]()})();Backbone.Validation=(function(_){'use strict';var defaultOptions={forceUpdate:false,selector:'name',labelFormatter:'sentenceCase',valid:Function.prototype,invalid:Function.prototype};var formatFunctions={formatLabel:function(attrName,model){return defaultLabelFormatters[defaultOptions.labelFormatter](attrName,model);},format:function(){var args=Array.prototype.slice.call(arguments),text=args.shift();return text.replace(/\{(\d+)\}/g,function(match,number){return typeof args[number]!=='undefined'?args[number]:match;});}};var flatten=function(obj,into,prefix){into=into||{};prefix=prefix||'';_.each(obj,function(val,key){if(obj.hasOwnProperty(key)){if(val&&typeof val==='object'&&!(val instanceof Array||val instanceof Date||val instanceof RegExp||val instanceof Backbone.Model||val instanceof Backbone.Collection)){flatten(val,into,prefix+key+'.');}
else{into[prefix+key]=val;}}});return into;};var Validation=(function(){var getValidatedAttrs=function(model){return _.reduce(_.keys(_.result(model,'validation')||{}),function(memo,key){memo[key]=void 0;return memo;},{});};var getValidators=function(model,attr){var attrValidationSet=model.validation?_.result(model,'validation')[attr]||{}:{};if(_.isFunction(attrValidationSet)||_.isString(attrValidationSet)){attrValidationSet={fn:attrValidationSet};}
if(!_.isArray(attrValidationSet)){attrValidationSet=[attrValidationSet];}
return _.reduce(attrValidationSet,function(memo,attrValidation){_.each(_.without(_.keys(attrValidation),'msg'),function(validator){memo.push({fn:defaultValidators[validator],val:attrValidation[validator],msg:attrValidation.msg});});return memo;},[]);};var validateAttr=function(model,attr,value,computed){return _.reduce(getValidators(model,attr),function(memo,validator){var ctx=_.extend({},formatFunctions,defaultValidators),result=validator.fn.call(ctx,value,attr,validator.val,model,computed);if(result===false||memo===false){return false;}
if(result&&!memo){return _.result(validator,'msg')||result;}
return memo;},'');};var validateModel=function(model,attrs){var error,invalidAttrs={},isValid=true,computed=_.clone(attrs),flattened=flatten(attrs);_.each(flattened,function(val,attr){error=validateAttr(model,attr,val,computed);if(error){invalidAttrs[attr]=error;isValid=false;}});return{invalidAttrs:invalidAttrs,isValid:isValid};};var mixin=function(view,options){return{preValidate:function(attr,value){var self=this,result={},error;if(_.isObject(attr)){_.each(attr,function(value,key){error=self.preValidate(key,value);if(error){result[key]=error;}});return _.isEmpty(result)?undefined:result;}
else{return validateAttr(this,attr,value,_.extend({},this.attributes));}},isValid:function(option){var flattened=flatten(this.attributes);if(_.isString(option)){return!validateAttr(this,option,flattened[option],_.extend({},this.attributes));}
if(_.isArray(option)){return _.reduce(option,function(memo,attr){return memo&&!validateAttr(this,attr,flattened[attr],_.extend({},this.attributes));},true,this);}
if(option===true){this.validate();}
return this.validation?this._isValid:true;},validate:function(attrs,setOptions){var model=this,validateAll=!attrs,opt=_.extend({},options,setOptions),validatedAttrs=getValidatedAttrs(model),allAttrs=_.extend({},validatedAttrs,model.attributes,attrs),changedAttrs=flatten(attrs||allAttrs),result=validateModel(model,allAttrs);model._isValid=result.isValid;_.each(validatedAttrs,function(val,attr){var invalid=result.invalidAttrs.hasOwnProperty(attr);if(!invalid){opt.valid(view,attr,opt.selector);}});_.each(validatedAttrs,function(val,attr){var invalid=result.invalidAttrs.hasOwnProperty(attr),changed=changedAttrs.hasOwnProperty(attr);if(invalid&&(changed||validateAll)){opt.invalid(view,attr,result.invalidAttrs[attr],opt.selector);}});_.defer(function(){model.trigger('validated',model._isValid,model,result.invalidAttrs);model.trigger('validated:'+(model._isValid?'valid':'invalid'),model,result.invalidAttrs);});if(!opt.forceUpdate&&_.intersection(_.keys(result.invalidAttrs),_.keys(changedAttrs)).length>0){return result.invalidAttrs;}}};};var bindModel=function(view,model,options){_.extend(model,mixin(view,options));};var unbindModel=function(model){delete model.validate;delete model.preValidate;delete model.isValid;};var collectionAdd=function(model){bindModel(this.view,model,this.options);};var collectionRemove=function(model){unbindModel(model);};return{version:'0.9.0',configure:function(options){_.extend(defaultOptions,options);},bind:function(view,options){options=_.extend({},defaultOptions,defaultCallbacks,options);var model=options.model||view.model,collection=options.collection||view.collection;if(typeof model==='undefined'&&typeof collection==='undefined'){throw'Before you execute the binding your view must have a model or a collection.\n'+'See http://thedersen.com/projects/backbone-validation/#using-form-model-validation for more information.';}
if(model){bindModel(view,model,options);}
else if(collection){collection.each(function(model){bindModel(view,model,options);});collection.bind('add',collectionAdd,{view:view,options:options});collection.bind('remove',collectionRemove);}},unbind:function(view,options){options=_.extend({},options);var model=options.model||view.model,collection=options.collection||view.collection;if(model){unbindModel(model);}
if(collection){collection.each(function(model){unbindModel(model);});collection.unbind('add',collectionAdd);collection.unbind('remove',collectionRemove);}},mixin:mixin(null,defaultOptions)};}());var defaultCallbacks=Validation.callbacks={valid:function(view,attr,selector){view.$('['+selector+'~="'+attr+'"]').removeClass('invalid').removeAttr('data-error');},invalid:function(view,attr,error,selector){view.$('['+selector+'~="'+attr+'"]').addClass('invalid').attr('data-error',error);}};var defaultPatterns=Validation.patterns={digits:/^\d+$/,number:/^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/,email:/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i,url:/^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i};var defaultMessages=Validation.messages={required:'{0} is required',acceptance:'{0} must be accepted',min:'{0} must be greater than or equal to {1}',max:'{0} must be less than or equal to {1}',range:'{0} must be between {1} and {2}',length:'{0} must be {1} characters',minLength:'{0} must be at least {1} characters',maxLength:'{0} must be at most {1} characters',rangeLength:'{0} must be between {1} and {2} characters',oneOf:'{0} must be one of: {1}',equalTo:'{0} must be the same as {1}',digits:'{0} must only contain digits',number:'{0} must be a number',email:'{0} must be a valid email',url:'{0} must be a valid url',inlinePattern:'{0} is invalid'};var defaultLabelFormatters=Validation.labelFormatters={none:function(attrName){return attrName;},sentenceCase:function(attrName){return attrName.replace(/(?:^\w|[A-Z]|\b\w)/g,function(match,index){return index===0?match.toUpperCase():' '+match.toLowerCase();}).replace(/_/g,' ');},label:function(attrName,model){return(model.labels&&model.labels[attrName])||defaultLabelFormatters.sentenceCase(attrName,model);}};var defaultValidators=Validation.validators=(function(){var trim=String.prototype.trim?function(text){return text===null?'':String.prototype.trim.call(text);}:function(text){var trimLeft=/^\s+/,trimRight=/\s+$/;return text===null?'':text.toString().replace(trimLeft,'').replace(trimRight,'');};var isNumber=function(value){return _.isNumber(value)||(_.isString(value)&&value.match(defaultPatterns.number));};var hasValue=function(value){return!(_.isNull(value)||_.isUndefined(value)||(_.isString(value)&&trim(value)==='')||(_.isArray(value)&&_.isEmpty(value)));};return{fn:function(value,attr,fn,model,computed){if(_.isString(fn)){fn=model[fn];}
return fn.call(model,value,attr,computed);},required:function(value,attr,required,model,computed){var isRequired=_.isFunction(required)?required.call(model,value,attr,computed):required;if(!isRequired&&!hasValue(value)){return false;}
if(isRequired&&!hasValue(value)){return this.format(defaultMessages.required,this.formatLabel(attr,model));}},acceptance:function(value,attr,accept,model){if(value!=='true'&&(!_.isBoolean(value)||value===false)){return this.format(defaultMessages.acceptance,this.formatLabel(attr,model));}},min:function(value,attr,minValue,model){if(!isNumber(value)||value<minValue){return this.format(defaultMessages.min,this.formatLabel(attr,model),minValue);}},max:function(value,attr,maxValue,model){if(!isNumber(value)||value>maxValue){return this.format(defaultMessages.max,this.formatLabel(attr,model),maxValue);}},range:function(value,attr,range,model){if(!isNumber(value)||value<range[0]||value>range[1]){return this.format(defaultMessages.range,this.formatLabel(attr,model),range[0],range[1]);}},length:function(value,attr,length,model){if(!_.isString(value)||value.length!==length){return this.format(defaultMessages.length,this.formatLabel(attr,model),length);}},minLength:function(value,attr,minLength,model){if(!_.isString(value)||value.length<minLength){return this.format(defaultMessages.minLength,this.formatLabel(attr,model),minLength);}},maxLength:function(value,attr,maxLength,model){if(!_.isString(value)||value.length>maxLength){return this.format(defaultMessages.maxLength,this.formatLabel(attr,model),maxLength);}},rangeLength:function(value,attr,range,model){if(!_.isString(value)||value.length<range[0]||value.length>range[1]){return this.format(defaultMessages.rangeLength,this.formatLabel(attr,model),range[0],range[1]);}},oneOf:function(value,attr,values,model){if(!_.include(values,value)){return this.format(defaultMessages.oneOf,this.formatLabel(attr,model),values.join(', '));}},equalTo:function(value,attr,equalTo,model,computed){if(value!==computed[equalTo]){return this.format(defaultMessages.equalTo,this.formatLabel(attr,model),this.formatLabel(equalTo,model));}},pattern:function(value,attr,pattern,model){if(!hasValue(value)||!value.toString().match(defaultPatterns[pattern]||pattern)){return this.format(defaultMessages[pattern]||defaultMessages.inlinePattern,this.formatLabel(attr,model),pattern);}}};}());_.each(defaultValidators,function(validator,key){defaultValidators[key]=_.bind(defaultValidators[key],_.extend({},formatFunctions,defaultValidators));});return Validation;}(_));(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";var Utils=require('./Utils');var Alerts=require('./alerts');var Api=require('./api');var ModelList=require('./Model');var ParamsModels=require('./params/Models');_.extend(Backbone.Model.prototype,Backbone.Validation.mixin);Backbone.Validation.configure({labelFormatter:'label'});var Ensemble=Backbone.Model.extend({initialize:function(){this.models=new ModelList();this.models.url='/api/model/?ensemble='+this.id;this.models.ensemble=this;},url:function(){return'/api/ensemble/'+this.id+'/';},parse:function(response){this.models.fetch();return response;},modelNames:{'MRNN':'MRNN','CONV':'Convolutional net','MLP_SIGMOID':'Deep Neural net. Sigmoid Units','MLP_RECTIFIED':'Deep Neural net. Linear Rectified Units','MLP_MAXOUT':'Deep Neural net. Maxout Units','MLP_MAXOUT_CONV':'Deep Neural net. Maxout Convolution Units','AUTOENCODER':'Autoencoder'},generalModelNames:['AUTOENCODER','MLP_SIGMOID','MLP_RECTIFIED','MLP_MAXOUT','MLP_MAXOUT_CONV'],modelsWithPredict:['MRNN','CONV','MLP_SIGMOID','MLP_RECTIFIED','MLP_MAXOUT','MLP_MAXOUT_CONV'],loadPossibleDatasets:function(options){var self=this,url;if(options&&options.equal_input){url='/api/dataset/?for_ensemble='+self.id+'&equal_input=1';}else{url='/api/dataset/?for_ensemble='+self.id;}
$.ajax({url:url,type:'GET',dataType:'json'}).done(function(data){self.set('possibleDatasets',data);self.set('possibleDatasetsLoaded',true);}).fail(function(xhr){self.set('possibleDatasetsLoaded',false);});},allowApplySettings:function(){var shared=this.get('shared'),state=this.get('state'),allowedStates=['new','empty','stopped','error','finished'];return(!shared&&($.inArray(state,allowedStates)!==-1));},allowPredict:function(){var state=this.get('state'),modelName;if(!this.validateDatasets()){return false;}
if(state==='finished'&&this.models.length){modelName=this.models.at(0).get('model_name');return(_.indexOf(this.modelsWithPredict,modelName)!==-1);}
return false;},allowShare:function(){var shared=this.get('shared'),state=this.get('state');return(state==='finished'&&!shared&&this.get('userAdmin'))&&this.validateDatasets();},allowStop:function(){var state=this.get('state');return(state==='in queue'||state==='training');},allowStartResume:function(){var state=this.get('state');return(state==='stopped'||state==='error'||state==='new')&&this.validateDatasets();},allowAddNewModel:function(){return!this.allowStop()&&!this.get('shared')&&this.validateDatasets();},resume:function(){var ensemble=this;$.ajax({url:'/api/ensemble/'+ensemble.id+'/resume/',type:'POST',dataType:'json',contentType:'application/json'}).done(function(){Alerts.ensembleResumed(ensemble,{id:ensemble.id});ensemble.fetch();for(var i=0;i<ensemble.models.length;i++){ensemble.models.at(i).miniResume();}}).error(Alerts.getXhrErrorParser(ensemble));},stop:function(){var ensemble=this;$.ajax({url:'/api/ensemble/'+ensemble.id+'/stop/',type:'POST',dataType:'json',contentType:'application/json'}).done(function(){Alerts.ensembleStopped(ensemble,{id:ensemble.id});ensemble.fetch();}).error(Alerts.getXhrErrorParser(ensemble));},share:function(){if(!window.confirm("Share this ensemble?\nYou will not be able to change this ensemble or unshare it.\nAll datasets associated with this ensemble will be also shared.")){return;}
var ensemble=this;$.ajax({url:'/api/ensemble/'+ensemble.id+'/share/',type:'POST',dataType:'json',contentType:'application/json'}).done(function(){Alerts.ensembleShared(ensemble);ensemble.fetch();}).error(Alerts.getXhrErrorParser(ensemble));},goToPredict:function(){window.location=this.get('runEnsembleURL');},applySettings:function(){var ensemble=this,data,done,error;data={train_dataset:ensemble.get('train_dataset'),test_dataset:ensemble.get('test_dataset'),send_email_on_change:this.get('send_email_on_change')};$.ajax({url:'/api/ensemble/'+ensemble.id+'/',type:'PUT',data:JSON.stringify(data,null,2),dataType:'json',contentType:'application/json'}).done(function(){}).error(function(){});},getNewModelName:function(){var dataType=this.get('data_type');if(dataType==='TIMESERIES'){return'MRNN';}else if(dataType==='IMAGES'){return'CONV';}else if(this.models.length){return this.models.at(0).get('model_name');}else{return _.pairs(_.pick(this.modelNames,this.generalModelNames));}},addOneMoreModel:function(name){var model=ParamsModels.getModel(name),ensemble=this,data;data={ensemble:ensemble.id,model_name:name,model_params:model.dumpParams()};$.ajax({url:'/api/model/',data:JSON.stringify(data,null,2),type:'POST',dataType:'json',contentType:'application/json'}).done(function(data){ensemble.models.addModel(data);Alerts.oneMoreModelAdded(model);}).fail(function(xhr){Alerts.getXhrErrorParser(model)();});},toggleSendEmail:function(value){this.set('send_email_on_change',value);},getFinishedJobs:function(){return this.models.where({state:'FINISHED'}).length+'/'+this.models.length;},getTrainingTime:function(){var time=this.models.pluck('training_time');time.push(0);return Utils.sum(time);},isAutoencoder:function(){return this.models.length>0&&this.models.at(0).get('model_name')==='AUTOENCODER';},validateDatasets:function(){if(this.isAutoencoder()&&this.get('train_dataset')){return true;}else if(this.get('train_dataset'),this.get('test_dataset')){return true;}else{return false;}},deleteModel:function(model){var ensemble=this;$.ajax({url:'/api/model/'+model.id+'/',type:'DELETE',dataType:'json',contentType:'application/json'}).done(function(data){ensemble.models.remove(model);}).fail(function(xhr){console.log('fail');});},onWorker:function(){return _.contains(['in queue','training'],this.get('state'));}});module.exports=Ensemble;},{"./Model":2,"./Utils":6,"./alerts":7,"./api":8,"./params/Models":14}],2:[function(require,module,exports){"use strict";var ParamsModels=require('./params/Models.js');var Stat=Backbone.Model.extend({getTestAccuracy:function(){return(this.get('test_accuracy')*100).toFixed(4);},getTrainAccuracy:function(){return(this.get('train_accuracy')*100).toFixed(4);}});var AutoencoderStat=Backbone.Model.extend({getCost:function(){var outputs=this.get('train_outputs');return outputs[outputs.length-1][1].toFixed(4);}});var MLPStatList=Backbone.Collection.extend({sync:Backbone.socketSync,model:Stat,comparator:'iteration',getDataForCharts:function(){var stat=this.last(),outputs=stat.get('train_outputs'),headers=stat.get('outputs_header'),result=[],iter,mult;outputs.forEach(function(output){iter={};headers.forEach(function(header,i){if(header==='train_accuracy'||header==='test_accuracy'){mult=100;}else{mult=1;}
iter[header]=output[i]*mult;});result.push(iter);});return result;}});var MRNNStatList=Backbone.Collection.extend({sync:Backbone.socketSync,model:Stat,comparator:'iteration',getDataForCharts:function(){var statsJson=this.toJSON(),stat;for(var i=0;i<statsJson.length;i++){stat=statsJson[i];stat.train_accuracy*=100;stat.test_accuracy*=100;stat.train_last_10_steps_acc*=100;stat.test_last_10_steps_acc*=100;}
return statsJson;}});var AutoencoderStatList=Backbone.Collection.extend({sync:Backbone.socketSync,model:AutoencoderStat,comparator:'iteration',getDataForCharts:function(){return this.last().get('train_outputs').map(function(v){return{iteration:v[0],train_cost:v[1]};});}});var ConvStatList=Backbone.Collection.extend({sync:Backbone.socketSync,model:Stat,comparator:'iteration',getDataForCharts:function(){var test_outputs={},output={},data=[];this.last().get('test_outputs').forEach(function(v){test_outputs[v[2]]=[v[0],v[1]];});this.last().get('train_outputs').forEach(function(v,i){output={iteration:i+1,train_loss:v[0],train_accuracy:v[1]*100};if(i in test_outputs){output.test_loss=test_outputs[i][0];output.test_accuracy=test_outputs[i][1]*100;}
data.push(output);});return data;}});var Model=Backbone.Model.extend({stateNames:{'NEW':'New','QUEUE':'In queue','TRAIN':'Training','FINISHED':'Finished','CANCELED':'Stopped','ERROR':'Error'},initialize:function(){var model=this,StatList;switch(this.get('model_name')){case'AUTOENCODER':StatList=AutoencoderStatList;break;case'MRNN':StatList=MRNNStatList;break;case'CONV':StatList=ConvStatList;break;default:StatList=MLPStatList;}
this.stats=new StatList();this.stats.url=function(){var url='/api/model/'+model.id+'/stats/';if(model.stats.length&&model.stats.last().id){return url+'?stat_id__gt='+model.stats.last().id;}
return url;};this.paramModel=ParamsModels.getModel(this.get('model_name'),this.get('model_params'));this.on('change:state',this.stateChanged);if($.inArray(this.get('state'),['QUEUE','TRAIN'])!==-1&&!this.isLogsSubscribed()){this.trainingLogsSubscribe();this.logsSubscribe();}},params:function(){return this.get('model_params');},parse:function(attrs){this.setModelParams();return attrs;},setModelParams:function(){if(this.paramModel!==undefined){this.paramModel.populate(this.get('model_params'));}},statsResetAndFetch:function(){var model=this;this.trigger('init-stats');this.stats.reset();this.stats.fetch({remove:false});$.get(this.stats.url(),function(data){model.stats.set(data);});},applyModelSettings:function(){var model_params=this.paramModel.dumpParams(),model=this;$.ajax({url:'/api/model/'+this.id+'/',type:'PATCH',data:JSON.stringify({model_params:model_params},null,2),dataType:'json',contentType:'application/json'}).done(function(data){model.set(data);console.log('success');}).fail(function(xhr){console.log('fail');});},rename:function(newName){var model=this;$.ajax({url:'/api/model/'+this.id+'/',type:'PATCH',data:JSON.stringify({name:newName},null,2),dataType:'json',contentType:'application/json'}).done(function(data){model.set(data);console.log('success');}).fail(function(xhr){console.log('fail');});},isProgressBarVisible:function(){var state=this.get('state');return(state==='CANCELED'||state==='TRAIN'||state==='ERROR'||state==='QUEUE');},allowResume:function(){var state=this.get('state'),maxItersNotReached;if(this.stats.length>0){maxItersNotReached=this.stats.last().get('iteration')<this.get('model_params').maxnum_iter;}
return(this.stats.length>0&&_.contains(['ERROR','CANCELED'],state))||(maxItersNotReached&&state==='FINISHED');},allowRestart:function(){var state=this.get('state');return _.contains(['ERROR','CANCELED','FINISHED'],state);},allowStart:function(){var state=this.get('state');return state==='NEW';},allowFinalize:function(){var state=this.get('state');return state==='CANCELED'&&this.stats.length>0;},allowStop:function(){var state=this.get('state');return false;},allowDelete:function(){var state=this.get('state');return _.contains(['CANCELED','ERROR','NEW','FINISHED'],state);},resume:function(iter){var model=this;$.ajax({url:'/api/model/'+this.id+'/resume/',type:'POST',data:JSON.stringify({iteration:iter},null,2),dataType:'json',contentType:'application/json'}).done(function(data){model.statsResetAndFetch();model.set(data);console.log('success');}).fail(function(xhr){console.log('fail');});},miniResume:function(){var model=this;if(model.get('state')==='FINISHED')return;model.trainingLogsSubscribe(function(){model.statsResetAndFetch();});},restart:function(){var model=this;$.ajax({url:'/api/model/'+this.id+'/restart/',type:'POST',dataType:'json',contentType:'application/json'}).done(function(data){model.statsResetAndFetch();model.set(data);console.log('success');}).fail(function(xhr){console.log('fail');});},finalize:function(){var model=this;$.ajax({url:'/api/model/'+this.id+'/finalize/',type:'POST',dataType:'json',contentType:'application/json'}).done(function(data){model.set(data);console.log('success');}).fail(function(xhr){console.log('fail');});},hasConfusionMatrix:function(){return!_.contains(['CONV','AUTOENCODER'],this.get('model_name'));},logsSubscriptionKey:function(){return'models:logs:subscription';},isLogsSubscribed:function(){var subscriptions=JSON.parse($.cookie(this.logsSubscriptionKey())||'[]');return(subscriptions.indexOf(this.get('id'))===-1)?false:true;},logsSubscribe:function(){var subscriptions=JSON.parse($.cookie(this.logsSubscriptionKey())||'[]');if(subscriptions.indexOf(this.get('id'))!==-1)return;subscriptions.push(this.get('id'));$.cookie(this.logsSubscriptionKey(),JSON.stringify(subscriptions));},logsUnsubscribe:function(){var subscriptions=JSON.parse($.cookie(this.logsSubscriptionKey())||'[]');var index=subscriptions.indexOf(this.get('id'));if(index===-1)return;subscriptions.splice(index,1);$.cookie(this.logsSubscriptionKey(),JSON.stringify(subscriptions));},stateChanged:function(model,newState){if($.inArray(newState,['FINISHED','CANCELED'])!==-1&&this.isLogsSubscribed()){this.trainingLogsUnsubscribe();model.logsUnsubscribe();}else if(!this.isLogsSubscribed()){this.trainingLogsSubscribe();model.logsSubscribe();}},trainingLogsSubscribe:function(callback){console.log('subscribing to logs...');var model=this;var payload={modelId:this.get('id'),ensembleId:this.get('ensemble')};socket.send("model:logs:subscribe",payload,function(subscribed){if(!subscribed)return;socket.bind('model:'+model.get('id')+':training:logs',model.logsAppender.bind(model));if(callback)callback();});},trainingLogsUnsubscribe:function(){console.log('unsubscribing to logs...');socket.unbind('models:'+this.get('id')+':training:logs',this.logsAppender.bind(this));},logsAppender:function(data){this.set('training_logs',(this.get('training_logs')||'')+data);}});var ModelList=Backbone.Collection.extend({model:Model,comparator:function(model){return-model.id;},addModel:function(model){var newModels=this.add(model,{merge:true});newModels.forEach(function(m){m.setModelParams();});}});module.exports=ModelList;},{"./params/Models.js":14}],3:[function(require,module,exports){"use strict";var Utils=require('./Utils'),TrainStatChart=require('./graphs/StatCharts.jsx'),AccuracyMatrixTable=require('./graphs/AccuracyMatrix.jsx'),CM=require('./graphs/ConfusionMatrix.jsx'),ConfusionMatrixChart=CM.ConfusionMatrixChart,SmallConfusionMatrix=CM.SmallConfusionMatrix,cx=React.addons.classSet,Bootstrap=require('./bootstrap.jsx'),BootstrapModal=Bootstrap.Modal,BootstrapAlert=Bootstrap.AlertList;var ModelHyperparamsTab=React.createClass({displayName:'ModelHyperparamsTab',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return this.props.params.getBackboneModels();},handleFinish:function(e){e.preventDefault();this.props.model.applyModelSettings();this.refs.alert.addAlert("Parameters were successfully applied for this model",'success',8000);},render:function(){var paramsComponent=this.props.params.getComponent(),isValid=this.props.params.isParamsValid(),finish=null;if(isValid){finish=(React.DOM.div({className:"simple-finish"},React.DOM.a({href:"#",className:"filter-finish filter-finish-blue",onClick:this.handleFinish},React.DOM.i({className:"icon icon-white icon-flag"}),"Apply")));}
var applied=(BootstrapAlert({ref:"alert",models:[]}));return(React.DOM.div(null,paramsComponent,React.DOM.div({className:"params-alert"}),applied,finish));}});var ModelHead=React.createClass({displayName:'ModelHead',mixins:[Utils.BackboneEventMixin],getBackboneEvents:function(){var props=this.props;return{"change":props.model,"change remove add":props.model.stats};},render:function(){var iters=null,accuracy=null,model=this.props.model,stat;if(model.stats.length>0){stat=model.stats.last();iters=React.DOM.div(null,React.DOM.strong(null,"Iterations:")," ",stat.get('iteration'));if(model.get('model_name')==='AUTOENCODER'){accuracy=React.DOM.div(null,React.DOM.strong(null,"Cost:")," ",stat.getCost());}else{accuracy=React.DOM.div(null,React.DOM.strong(null,"Test/Train:")," ",stat.getTestAccuracy(),"% / ",stat.getTrainAccuracy(),"%");}}else{iters=React.DOM.div(null,React.DOM.strong(null,"Iterations:")," 0");}
var modelID=(React.DOM.div(null,React.DOM.strong(null,"Model ID:")," ",model.id));return(React.DOM.li({onClick:this.props.handleClick,className:(this.props.isSelected)?"active":""},this.props.isSelected?React.DOM.i({className:"icon icon-white icon-chevron-right"}):'',React.DOM.h4({className:"model-list-item"},(model.get('name'))?model.get('name'):"Model "+model.id),(model.get('name'))?modelID:null,React.DOM.div(null,React.DOM.strong(null,"Net:")," ",this.props.ensemble.modelNames[this.props.model.get('model_name')]),iters,accuracy));}});var ModelTitle=React.createClass({displayName:'ModelTitle',getInitialState:function(){return{inputText:this.props.model.get('name')};},openDeleteModal:function(e){e.preventDefault();this.refs.deleteModal.open();},closeDeleteModal:function(){this.refs.deleteModal.close();},handleDelete:function(model){this.props.ensemble.deleteModel(model);this.closeDeleteModal();},openRenameModal:function(e){e.preventDefault();this.refs.renameModal.open();},closeRenameModal:function(){this.refs.renameModal.close();},handleRename:function(newName){this.props.model.rename(newName);this.closeRenameModal();},onChange:function(e){this.setState({inputText:e.target.value});},handlePrevNextBtn:function(model,e){e.preventDefault();this.props.handleSelectModel(model);},render:function(){var model=this.props.model,renameBtn=null,deleteBtn=null,prevBtn=null,nextBtn=null,hasPrev=this.props.previousModel!==undefined,hasNext=this.props.nextModel!==undefined;if(model.allowDelete()){deleteBtn=(React.DOM.button({onClick:this.openDeleteModal,className:"btn btn-mini btn-danger btn-delete"},React.DOM.i({className:"icon icon-white icon-remove"})," Delete"));}
prevBtn=(React.DOM.a({href:"#",className:"btn btn-info",onClick:(hasPrev)?this.handlePrevNextBtn.bind(this,this.props.previousModel):"",disabled:!hasPrev},React.DOM.i({className:"icon icon-white icon-chevron-left"})," Previous"));nextBtn=(React.DOM.a({href:"#",className:"btn btn-info",onClick:(hasNext)?this.handlePrevNextBtn.bind(this,this.props.nextModel):"",disabled:!hasNext},"Next ",React.DOM.i({className:"icon icon-white icon-chevron-right"})));renameBtn=(React.DOM.a({href:"#",onClick:this.openRenameModal,className:"btn btn-mini btn-info btn-rename"},React.DOM.i({className:"icon icon-white icon-pencil"})," Rename"));return(React.DOM.div({className:"model-title clearfix"},React.DOM.div({className:"pull-left"},React.DOM.h2(null,(model.get('name'))?model.get('name'):"Model "+this.props.id),renameBtn," ",deleteBtn),React.DOM.div({className:"model-paging"},prevBtn," ",nextBtn),BootstrapModal({ref:"deleteModal",confirm:"Delete",cancel:"Cancel",confirmButtonClass:"btn-danger",onCancel:this.closeDeleteModal,onConfirm:this.handleDelete.bind(this,model),title:"Delete model #"+this.props.id},React.DOM.p(null,"If you delete this model, you will no longer have access to it and it will be removed permanently.")),BootstrapModal({ref:"renameModal",classes:"modal-mini",confirm:"Rename",cancel:"Cancel",confirmButtonClass:"btn-success",onCancel:this.closeRenameModal,onConfirm:this.handleRename.bind(this,this.state.inputText),title:"Rename model #"+this.props.id},React.DOM.p(null,"Please provide new model name:"),React.DOM.input({type:"text",onChange:this.onChange,value:this.state.inputText,className:"rename-input"}))));}});var ModelActions=React.createClass({displayName:'ModelActions',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.model.stats];},getInitialState:function(){return{selectedIter:undefined};},handleIterChange:function(e){this.setState({selectedIter:e.target.value});},handleResume:function(){this.props.model.resume(this.state.selectedIter);},handleRestart:function(){this.props.model.restart();},handleFinalize:function(){this.props.model.finalize();},render:function(){var select=null,options,iter,selectedIter,model=this.props.model,resumeBtn=null,restartBtn=null,finalizeBtn=null,stopBtn=null,startBtn=null;if(this.props.ensemble.onWorker()){return React.DOM.div({className:"model-actions"});}
if(model.get('model_name')==="MRNN"&&model.allowResume()){options=this.props.model.stats.map(function(stat){iter=stat.get('iteration');return React.DOM.option({key:iter,value:iter},iter);});options.reverse();selectedIter=(this.state.selectedIter)?this.state.selectedIter:this.props.model.stats.last().get('iteration');select=React.DOM.select({onChange:this.handleIterChange,value:selectedIter},options);}
if(model.allowStart()){startBtn=(React.DOM.button({onClick:this.handleRestart,className:"btn btn-info"},React.DOM.i({className:"icon icon-white icon-play"})," Start"));}
if(model.allowResume()){resumeBtn=(React.DOM.button({onClick:this.handleResume,className:"btn btn-info"},React.DOM.i({className:"icon icon-white icon-play"})," Resume"));}
if(model.allowRestart()){restartBtn=(React.DOM.button({onClick:this.handleRestart,className:"btn btn-info"},React.DOM.i({className:"icon icon-white icon-refresh"})," Restart"));}
if(model.allowStop()){stopBtn=(React.DOM.button({className:"btn btn-info"},React.DOM.i({className:"icon icon-white icon-stop"})," Stop"));}
if(model.allowFinalize()){finalizeBtn=(React.DOM.button({onClick:this.handleFinalize,className:"btn btn-info"},React.DOM.i({className:"icon icon-white icon-flag"})," Finalize"));}
return(React.DOM.div({className:"model-actions"},React.DOM.div({className:"input-append"},select,resumeBtn,startBtn,stopBtn,restartBtn,finalizeBtn)));}});var ModelProgress=React.createClass({displayName:'ModelProgress',mixins:[Utils.BackboneEventMixin],getBackboneEvents:function(){return{'add change remove':this.props.stats,'change':this.props.params};},render:function(){var props=this.props,classes=cx({"progress":true,"progress-striped":true,"active":props.isActive});var currentIter=0;if(props.stats.length>0){currentIter=props.stats.last().get('iteration');}
var maxIter=props.params.get('maxnum_iter');return(React.DOM.div({className:"model-progress"},React.DOM.strong({className:"upper"},"Progress:"),React.DOM.div({className:classes},React.DOM.div({className:"bar",style:{width:(currentIter/maxIter*100)+"%"}},React.DOM.p(null,currentIter,"/",maxIter)))));}});var ModelMainTab=React.createClass({displayName:'ModelMainTab',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.stats];},render:function(){var stats=this.props.stats,smallConfMatrix=null,props=this.props,classes=cx({'label':true,'label-info':props.modelState==='TRAIN','label-success':props.modelState==='FINISHED','label-warning':props.modelState==='CANCELED','label-important':props.modelState==='ERROR'}),stateName=props.humanStateNames[props.modelState],lastIterInfo=null,chartTrain=null,chartTest=null,stat,data,colors,statsNames;var logstab=LogsTab({logs:this.props.model.get('training_logs')});if(stats.length>0){stat=stats.last();colors=d3.scale.category20();data=stats.getDataForCharts();if(props.showSmallConfusionMatrix){smallConfMatrix=(React.DOM.div(null,React.DOM.h4(null,"Confusion Matrix (test)"),SmallConfusionMatrix({stats:stats})));}
if(props.modelName==='AUTOENCODER'){statsNames=['train_cost'];colors.domain(statsNames);chartTrain=TrainStatChart({chartName:"Cost",data:data,statsNames:statsNames,colors:colors,noControls:true,width:500,height:200});lastIterInfo=(React.DOM.div(null,React.DOM.b(null,"Last iteration:")," ",stat.get('iteration'),React.DOM.br(null),React.DOM.b(null,"Cost:")," ",stat.getCost()));}else{statsNames=['train_accuracy','test_accuracy'];colors.domain(statsNames);chartTrain=TrainStatChart({chartName:"Train/Test Accuracy",data:data,statsNames:['train_accuracy','test_accuracy'],colors:colors,noControls:true,width:500,height:200});chartTest=TrainStatChart({chartName:"Train/Test Loss",data:data,statsNames:['test_loss','train_loss'],colors:colors,noControls:true,width:500,height:200});lastIterInfo=(React.DOM.div(null,React.DOM.b(null,"Last iteration:")," ",stat.get('iteration'),React.DOM.br(null),React.DOM.b(null,"Test accuracy:")," ",stat.getTestAccuracy(),"%",React.DOM.br(null),React.DOM.b(null,"Train accuracy:")," ",stat.getTrainAccuracy(),"%"));}}
return(React.DOM.div({className:"row-fluid"},React.DOM.div({className:"model-status span5"},React.DOM.strong(null,"Model name:")," ",props.humanModelNames[props.modelName],React.DOM.br(null),React.DOM.strong(null,"Training time:")," ",Utils.secondsToStr(props.trainingTime),React.DOM.br(null),React.DOM.strong(null,"Job status:")," ",React.DOM.span({className:classes}," ",stateName),lastIterInfo,React.DOM.div({className:"model-conf-matrix"},smallConfMatrix)),React.DOM.div({className:"model-charts span7"},chartTrain,chartTest),React.DOM.div({className:"clearboth"}),logstab));}});var ModelChartsTab=React.createClass({displayName:'ModelChartsTab',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.stats];},render:function(){var colors=d3.scale.category20(),props=this.props,stats=this.props.stats,data,statsNames,charts=[];if(stats.length===0){return React.DOM.div(null,"No stats");}
data=stats.getDataForCharts();if(props.modelName==='AUTOENCODER'){statsNames=['train_cost'];colors.domain(statsNames);charts=[TrainStatChart({key:1,chartName:"Cost",data:data,statsNames:statsNames,colors:colors,withLogScale:true})];}else if(props.modelName==='CONV'){statsNames=['train_accuracy','test_accuracy','train_loss','test_loss'];colors.domain(statsNames);charts=[TrainStatChart({key:1,chartName:"Accuracy",data:data,statsNames:['train_accuracy','test_accuracy'],colors:colors}),TrainStatChart({key:2,chartName:"Loss",data:data,statsNames:['train_loss','test_loss'],colors:colors,withLogScale:true})];}else if(props.modelName==='MRNN'){statsNames=['train_accuracy','test_accuracy','train_loss','test_loss','grad1','grad2','mu','lambda','1_h_norm','h_f_norm','f_h_norm','1_f_norm','v_h_norm','v_f_norm','h_o_norm'];colors.domain(statsNames);charts=[TrainStatChart({key:1,chartName:"Accuracy",data:data,statsNames:['train_accuracy','test_accuracy'],colors:colors}),TrainStatChart({key:2,chartName:"Loss",data:data,statsNames:['train_loss','test_loss'],colors:colors,withLogScale:true}),TrainStatChart({key:3,chartName:"Gradients",data:data,statsNames:['grad1','grad2'],colors:colors,withLogScale:true}),TrainStatChart({key:4,chartName:"Damping Values",data:data,statsNames:['mu','lambda'],colors:colors,withLogScale:true}),TrainStatChart({key:5,chartName:"Conjugate Gradient Statistics",data:data,statsNames:['total_num_cg','rho','norm_CG_x'],colors:colors,rightYstatsNames:['total_num_cg'],withLogScale:true}),TrainStatChart({key:6,chartName:"Weights Norm",data:data,statsNames:['1_h_norm','h_f_norm','f_h_norm','1_f_norm','v_h_norm','v_f_norm','h_o_norm'],colors:colors}),];}else{statsNames=['train_accuracy','test_accuracy','train_loss','test_loss','learning_rate','momentum','last_layer_row_norms_mean','last_layer_col_norms_mean','iteration_time'];colors.domain(statsNames);charts=[TrainStatChart({key:1,chartName:"Accuracy",data:data,statsNames:['train_accuracy','test_accuracy'],colors:colors}),TrainStatChart({key:2,chartName:"Loss",data:data,statsNames:['train_loss','test_loss'],colors:colors,withLogScale:true}),TrainStatChart({key:3,chartName:"Hyperparams",data:data,statsNames:['learning_rate','momentum'],colors:colors}),TrainStatChart({key:4,chartName:"Weights Norm",data:data,statsNames:['last_layer_row_norms_mean','last_layer_col_norms_mean'],colors:colors}),TrainStatChart({key:5,chartName:"Time",data:data,statsNames:['iteration_time'],colors:colors})];}
return(React.DOM.div(null,charts));}});var ModelConfusionMatrixTab=React.createClass({displayName:'ModelConfusionMatrixTab',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.stats];},getInitialState:function(){return{groupByPredict:true};},handleChangeGroupBy:function(e){this.setState({groupByPredict:e.target.checked});},handleChangeIteration:function(e){this.setState({selectedIter:parseInt(e.target.value,10)});},getSelectedIteration:function(stats){if(this.state.selectedIter!==undefined){return this.state.selectedIter;}
return stats.last().get('iteration');},render:function(){var select=null,options=null,props=this.props,stats=props.stats,stat,selectedIter,testMatrix,trainMatrix,testChart=null,trainChart=null;if(stats.length===0){return React.DOM.div(null,"No data");}
selectedIter=this.getSelectedIteration(stats);stat=stats.findWhere({'iteration':selectedIter});testMatrix=stat.get('confusion_matrix');testChart=ConfusionMatrixChart({stat:stat,matrix:testMatrix,groupByPredict:this.state.groupByPredict,name:"Test set",width:800,height:600});trainMatrix=stat.get('confusion_matrix_train');if(trainMatrix!==undefined){trainChart=ConfusionMatrixChart({stat:stat,matrix:trainMatrix,groupByPredict:this.state.groupByPredict,name:"Training set",width:800,height:600});}
if(props.modelName==='MRNN'){options=stats.map(function(stat){return React.DOM.option({key:stat.get('iteration'),value:stat.get('iteration')},stat.get('iteration'));});options.reverse();select=(React.DOM.select({value:selectedIter,onChange:this.handleChangeIteration},options));}
return(React.DOM.div(null,select,React.DOM.label(null,React.DOM.input({type:"checkbox",checked:this.state.groupByPredict,onChange:this.handleChangeGroupBy}),"group by predict"),testChart,trainChart));}});var ModelAccuracyMatrixTab=React.createClass({displayName:'ModelAccuracyMatrixTab',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.stats];},render:function(){return AccuracyMatrixTable({stats:this.props.stats});}});var LogsTab=React.createClass({displayName:'LogsTab',shouldComponentUpdate:function(nextProps,nextState){return(nextProps.logs||'').length>(this.props.logs||'').length;},componentDidUpdate:function(){var logstab=this.getDOMNode();$(logstab).animate({scrollTop:logstab.scrollHeight},1500);},render:function(){return(React.DOM.div({ref:"modelLogs",className:"model-logs"},React.DOM.pre({ref:"logsBody"},this.props.logs)))}});var ModelTabs=React.createClass({displayName:'ModelTabs',selectTab:function(name){this.props.handleSelectTab(name);},getMainTab:function(){return ModelMainTab({modelName:this.props.model.get('model_name'),stats:this.props.model.stats,modelState:this.props.model.get('state'),model:this.props.model,trainingTime:this.props.model.get('training_time'),showSmallConfusionMatrix:this.props.model.hasConfusionMatrix(),humanModelNames:this.props.ensemble.modelNames,humanStateNames:this.props.model.stateNames});},render:function(){var tab=null,selectedTab=this.props.selectedTab,props=this.props;switch(selectedTab){case'charts':tab=ModelChartsTab({modelName:this.props.model.get('model_name'),stats:this.props.model.stats});break;case'confusion':tab=ModelConfusionMatrixTab({modelName:this.props.model.get('model_name'),stats:this.props.model.stats});break;case'accuracy_matrix':tab=ModelAccuracyMatrixTab({stats:this.props.model.stats});break;case'hyperparams':if(this.props.model.paramModel){tab=ModelHyperparamsTab({params:this.props.model.paramModel,model:this.props.model});}else{tab=this.getMainTab();}
break;default:tab=this.getMainTab();}
return(React.DOM.div(null,React.DOM.ul({className:"tabs"},React.DOM.li({className:(selectedTab==='main')?"active":"",onClick:this.selectTab.bind(this,'main')},"Status"),React.DOM.li({className:(selectedTab==='hyperparams')?"active":"",onClick:this.selectTab.bind(this,'hyperparams')},"Hyperparams"),React.DOM.li({className:(selectedTab==='charts')?"active":"",onClick:this.selectTab.bind(this,'charts')},"Charts"),(this.props.model.hasConfusionMatrix())?React.DOM.li({className:(selectedTab==='confusion')?"active":"",onClick:this.selectTab.bind(this,'confusion')},"Confusion matrix"):"",(this.props.model.get('model_name')==='MRNN')?React.DOM.li({className:(selectedTab==='accuracy_matrix')?"active":"",onClick:this.selectTab.bind(this,'accuracy_matrix')},"Accuracy Matrix"):""),React.DOM.div({className:"tabs-pane"},tab)));}});var ModelBody=React.createClass({displayName:'ModelBody',mixins:[Utils.BackboneEventMixin],getBackboneEvents:function(){var props=this.props;return{"change":props.model,};},render:function(){var progress=null,model=this.props.model;if(model.isProgressBarVisible()){progress=ModelProgress({stats:model.stats,params:model.paramModel,isActive:this.props.model.get('state')==='TRAIN'});}
return(React.DOM.div({className:"span9"},ModelTitle({id:this.props.model.id,model:this.props.model,ensemble:this.props.ensemble,nextModel:this.props.nextModel,previousModel:this.props.previousModel,handleSelectModel:this.props.handleSelectModel}),ModelActions({model:this.props.model,ensemble:this.props.ensemble}),progress,ModelTabs({model:this.props.model,ensemble:this.props.ensemble,selectedTab:this.props.selectedTab,handleSelectTab:this.props.handleSelectTab})));}});module.exports={Head:ModelHead,Body:ModelBody};},{"./Utils":6,"./bootstrap.jsx":9,"./graphs/AccuracyMatrix.jsx":10,"./graphs/ConfusionMatrix.jsx":11,"./graphs/StatCharts.jsx":12}],4:[function(require,module,exports){"use strict";var Ensemble=require('./Ensemble');var EnsembleComponent=require('./TrainEnsembleComponents.jsx');$(function(){var ensemble=new Ensemble({id:ensembleId,userAdmin:userAdmin,runEnsembleURL:runEnsembleURL});var AppView=Backbone.View.extend({initialize:function(){this.listenTo(ensemble.models,'add',this.addOne);this.listenToOnce(ensemble,'sync',this.renderEnsemble);this.listenTo(ensemble.models,'add remove',this.updateEnsemble);this.listenTo(ensemble.models,'change:state',this.updateEnsemble);this.listenTo(ensemble.models,'change:model_params',this.modelUpdateParams);},addOne:function(model){model.statsResetAndFetch();},renderEnsemble:function(){React.renderComponent(EnsembleComponent({ensemble:ensemble}),document.getElementById('ensemble-view'));},updateEnsemble:function(){ensemble.fetch();},modelUpdateParams:function(model){model.setModelParams();}});new AppView();ensemble.fetch();$.removeCookie('models:logs:subscription');ensemble.models.fetch({remove:false,success:function(collection,response,options){var models=collection.filter(function(model){return(model.state!=='TRAIN')?true:false;});models.forEach(function(model){$.get(model.stats.url(),function(data){model.stats.set(data);});});}});setInterval(function(){ensemble.models.fetch({remove:false});},15000);});},{"./Ensemble":1,"./TrainEnsembleComponents.jsx":5}],5:[function(require,module,exports){"use strict";var Utils=require('./Utils'),Bootstrap=require('./bootstrap.jsx'),ModelComponents=require('./ModelComponents.jsx'),cx=React.addons.classSet;var ModelHead=ModelComponents.Head,ModelBody=ModelComponents.Body;var BootstrapModal=Bootstrap.Modal,BootstrapSelect=Bootstrap.Select,AlertList=Bootstrap.AlertList,Switch=Bootstrap.Switch;var StatusState=React.createClass({displayName:'StatusState',render:function(){var classes,state=this.props.state;if(this.props.shared){state='shared';}
classes=cx({'label':true,'label-warning':(state==='shared'||state==='stopped'),'label-info':state==='training','label-success':state==='finished','label-important':state==='error'});if(state==='error'&&typeof this.props.error==='string'&&this.props.error){state+=": "+this.props.error;}
return(React.DOM.div(null,React.DOM.b(null,"Status:",' '),React.DOM.span({className:classes},state)));}});var SimpleStatusItem=React.createClass({displayName:'SimpleStatusItem',render:function(){return(React.DOM.div({className:this.props.classes},React.DOM.b(null,this.props.name,":",' '),React.DOM.span(null,this.props.value)));}});var EnsembleStatus=React.createClass({displayName:'EnsembleStatus',render:function(){var props=this.props,traceback=null,queuePosition=null;if(props.traceback&&userAdmin){traceback=React.DOM.div({className:"offset-top-mini"},React.DOM.pre(null,props.traceback));}
if(props.ensembleState==='in queue'){queuePosition=SimpleStatusItem({name:"Position in queue",value:props.queuePosition||"unknown"});}
return(React.DOM.div({className:"train-info"},SimpleStatusItem({name:"Finished jobs",value:props.finishedJobs}),SimpleStatusItem({name:"Training time",value:props.trainingTime}),StatusState({state:props.ensembleState,error:props.error,shared:props.isShared}),traceback,queuePosition));}});var ActionButton=React.createClass({displayName:'ActionButton',render:function(){return React.DOM.button({className:this.props.classes,onClick:this.props.handleClick},React.DOM.i({className:"icon icon-white icon-"+this.props.icon})," ",this.props.name);}});var Select=React.createClass({displayName:'Select',getInitialState:function(){return{value:this.props.value};},changeSelect:function(event){this.props.ensemble.set(this.props.type,event.target.value);this.setState({value:event.target.value})},render:function(){var value=this.state.value||0,options=[];if(value===0){options=[React.DOM.option({key:0,value:0},"---")];}
options=options.concat(this.props.values.map(function(val){return(React.DOM.option({key:val.id,value:val.id},val.id+': '+val.name));}));var filter;$(this.props.values).each(function(i,val){if(val.id==value)
filter=i;});return(React.DOM.div(null,React.DOM.select({value:value,onChange:this.changeSelect},options),FilterDatasetPopOver({filters:this.props.values[filter].filters,value:value})))},});var FilterDatasetPopOver=React.createClass({displayName:'FilterDatasetPopOver',getInitialState:function(){return{value:this.props.value,merge_name:'',current_merge_id:''};},componentDidMount:function(){this.createPopOver();},getDataFileName:function(id){var self=this;$.ajax({url:'/api/data/'+id+"/",type:'GET',dataType:'json'}).done(function(data){self.setState({merge_name:data.name,current_merge_id:data.id});}).fail(function(xhr){console.log('fail');});},createPopOver:function(){$(this.getDOMNode()).popover('destroy');var filters=this.props.filters;var icons={normalize:'<i class="icon icon-white icon-signal"></i> Normalize',shuffle:'<i class="icon icon-white icon-random"></i> Shuffle',split:'<i class="icon icon-white icon-resize-full"></i> Split',balance:'<i class="icon icon-white icon-tasks"></i> Balance',merge:'<i class="icon icon-white icon-resize-small"></i> Merge',binarize:'<i class="icon icon-white icon-random"></i> Binarize',};var html_content="<ul class='ul-dataset'>";var column=false;var filter_display;var getData=this.getDataFileName;var self=this;$(filters).each(function(n,filter){if((filter.name=="permute"||filter.name=="ignore")&&column==false){filter_display='<i class="icon icon-white icon-indent-right"></i> Column Select';column=true;}
else if(filter.name=='split'){filter_display=icons[filter.name]+" Start: "+filter.start+"%, End: "+filter.end+"%";}
else if(filter.name=="balance"){filter_display=icons[filter.name]+" ("+filter.sample+" "+filter.adjust[0]+"%)";}
else if(filter.name=="merge"){var id=filter.datas[0];if(id!=self.state.current_merge_id)
self.getDataFileName(id);var name=self.state.merge_name;filter_display=icons[filter.name]+" (#"+id+" "+name+")";}
else if(filter.name!="permute"&&filter.name!="ignore"){filter_display=icons[filter.name];}
else
return false;html_content+="<li>"+filter_display+"</li>";});html_content+="</ul>";var options={title:'Filters Applied',trigger:'hover',placement:'right',content:html_content,container:'body',html:true,}
$(this.getDOMNode()).popover(options);},render:function(){if(this.isMounted())
this.createPopOver();return(React.DOM.div({className:"dataset-popover-train"},React.DOM.i({className:"icon icon-white icon-info-sign"})))},});var EnsembleSettings=React.createClass({displayName:'EnsembleSettings',handleFileChange:function(dataset,event){this.props.ensemble.set(dataset,event.target.value);console.log(this.refs);},render:function(){var infoText=null,applyAction=null,switches=null,testDatasetSelect=null,datasetsAlert=null,props=this.props,ensemble=props.ensemble;if(props.possibleDatasets===undefined){ensemble.loadPossibleDatasets();return React.DOM.div({className:"ajax-loader"});}
if(props.possibleDatasetsLoaded===false){datasetsAlert=React.DOM.div({className:"alert alert-error"},"Error. Please refresh your browser and try again.");}
applyAction=(React.DOM.div(null,React.DOM.div(null),React.DOM.button({className:"btn btn-mini btn-success",onClick:ensemble.applySettings.bind(ensemble)},React.DOM.i({className:"icon icon-white icon-ok"})," Apply Settings")));if(!props.isAutoencoder){testDatasetSelect=(React.DOM.span(null,React.DOM.b(null,"Test dataset"),React.DOM.br(null),Select({values:props.possibleDatasets,value:props.testDataset,ensemble:this.props.ensemble,type:"train_dataset"}),React.DOM.br(null)));}
if(!props.isDatasetsValid){datasetsAlert=React.DOM.div({className:"alert alert-important"},"In order to keep training this model, please select datasets for training");}
if(!props.isShared){switches=(React.DOM.ul(null,React.DOM.li(null,React.DOM.b(null,"Send me email on status change:",' '),Switch({value:props.sendEmailOnChange,handleChange:ensemble.toggleSendEmail.bind(ensemble)}))));}
var train_select=Select({values:props.possibleDatasets,value:props.trainDataset,ensemble:this.props.ensemble,type:"train_dataset"})
return(React.DOM.div({className:"train-subheader"},datasetsAlert,React.DOM.div({className:"train-dataset"},React.DOM.strong(null,"Train dataset"),React.DOM.br(null),train_select,React.DOM.br(null),testDatasetSelect),React.DOM.div({className:"train-settings"},switches,applyAction),EnsembleStatus({finishedJobs:props.finishedJobs,queuePosition:props.queuePosition,traceback:props.traceback,trainingTime:Utils.secondsToStr(props.trainingTime),isShared:props.isShared,error:props.error,ensembleState:props.ensembleState})));}});var EnsembleActions=React.createClass({displayName:'EnsembleActions',handleOneMoreModelClick:function(event){var name=this.props.ensemble.getNewModelName();if(typeof name==='object'){this.openModal();}else{this.props.ensemble.addOneMoreModel(name);}},openModal:function(){this.refs.modal.open();},closeModal:function(){this.refs.modal.close();},submitNewModal:function(event){this.props.ensemble.addOneMoreModel(this.refs.modalSelect.state.value);this.refs.modal.close();},openDeleteModal:function(e){e.preventDefault();this.refs.modalDelete.open();},closeDeleteModal:function(){this.refs.modalDelete.close();},deleteEnsemble:function(){var en=this.props.ensemble;this.closeDeleteModal();$.ajax({url:'/api/ensemble/'+en.id+'/',type:'DELETE',dataType:'json'}).done(function(data){window.location.href='/dashboard/ensembles/';}).fail(function(xhr){});},render:function(){var props=this.props,ensemble=props.ensemble,names=props.newModelNames,btnStart=null,btnStop=null,btnPredict=null,btnDelete=null,btnShare=null,btnAdd=null,btnSettings=null,modal=null,modalSelect=null,modalDelete=null;if(typeof names==='object'){modalSelect=BootstrapSelect({ref:"modalSelect",value:names[0][0],values:names});modal=(BootstrapModal({ref:"modal",confirm:"OK",cancel:"Cancel",onCancel:this.closeModal,onConfirm:this.submitNewModal,title:"Select model type."},modalSelect));}
modalDelete=(BootstrapModal({ref:"modalDelete",confirm:"Delete",cancel:"Cancel",confirmButtonClass:"btn-danger",onCancel:this.closeDeleteModal,onConfirm:this.deleteEnsemble,title:"Delete ensemble #"+this.props.ensemble.get('id')},React.DOM.p(null,"If you delete this ensemble, you will no longer have access to it and it will be removed permanently.")));if(props.allowStartResume){btnStart=ActionButton({classes:"btn btn-success",name:(props.ensembleState==='new')?"Start All":"Resume All",icon:"play",handleClick:ensemble.resume.bind(ensemble)});}
if(props.allowStop){btnStop=ActionButton({classes:"btn btn-warning",name:"Stop All",icon:"stop",handleClick:ensemble.stop.bind(ensemble)});}
if(props.allowAddNewModel){btnAdd=ActionButton({classes:"btn btn-info",name:"Add Model",icon:"plus",handleClick:this.handleOneMoreModelClick});}
if(props.allowShare){btnShare=ActionButton({classes:"btn btn-info",name:"Share",icon:"share-alt",handleClick:ensemble.share.bind(ensemble)});}
if(props.allowPredict){btnPredict=ActionButton({classes:"btn btn-success",name:"Predict",icon:"screenshot",handleClick:ensemble.goToPredict.bind(ensemble)});}
btnDelete=ActionButton({classes:"btn btn-danger",name:"Delete Ensemble",icon:"remove",handleClick:this.openDeleteModal});btnSettings=ActionButton({classes:"btn btn-info",name:(this.props.settingsVisible)?"Hide Settings":"Show Settings",icon:"cog",handleClick:this.props.toggleSettings});return(React.DOM.div(null,React.DOM.div({className:"btn-group btn-group-right"},btnStart,btnStop,btnPredict,btnSettings,btnAdd,btnShare),btnDelete,modal,modalDelete));}});var EnsembleReact=React.createClass({displayName:'EnsembleReact',mixins:[Utils.BackboneEventMixin],getBackboneEvents:function(){var props=this.props;return{"change":props.ensemble,"add remove":props.ensemble.models};},getInitialState:function(){return{settingsVisible:!this.props.ensemble.validateDatasets(),selectedTab:'main'};},selectModel:function(model){this.setState({selectedModel:model});},selectTab:function(name){this.setState({selectedTab:name});},toggleSettings:function(){this.setState({settingsVisible:!this.state.settingsVisible});},render:function(){var ensemble=this.props.ensemble,models=ensemble.models,settings=null,modelsPanel=null,modelsHeads=null,modelBody=null,modelIndex,selectedModel=this.state.selectedModel;if(models.length>0){if(!selectedModel||!_.contains(models.pluck('id'),selectedModel.id)){selectedModel=models.at(0);}
modelsHeads=models.map(function(model,index){if(model.id===selectedModel.id){modelIndex=index;}
return ModelHead({key:model.id,model:model,ensemble:ensemble,isSelected:model.id===selectedModel.id,handleClick:this.selectModel.bind(this,model)});},this);modelBody=ModelBody({key:selectedModel.id,model:selectedModel,ensemble:ensemble,selectedTab:this.state.selectedTab,handleSelectTab:this.selectTab,previousModel:models.at(modelIndex+1),nextModel:models.at(modelIndex-1),handleSelectModel:this.selectModel});modelsPanel=(React.DOM.div({className:"row"},React.DOM.div({className:"span3"},React.DOM.div({className:"models-list"},React.DOM.h3(null,"List of models"),React.DOM.ul({className:"models-list-ul"},modelsHeads))),modelBody));}
if(this.state.settingsVisible){settings=EnsembleSettings({dataType:ensemble.get('data_type'),allowApply:ensemble.allowApplySettings(),isEnsembleShared:ensemble.get('shared'),isAutoencoder:ensemble.isAutoencoder(),isDatasetsValid:ensemble.validateDatasets(),possibleDatasets:ensemble.get('possibleDatasets'),trainDataset:ensemble.get('train_dataset'),testDataset:ensemble.get('test_dataset'),sendEmailOnChange:ensemble.get('send_email_on_change'),ensembleState:ensemble.get('state'),traceback:ensemble.get('traceback'),queuePosition:ensemble.get('queue_position'),finishedJobs:ensemble.getFinishedJobs(),trainingTime:ensemble.getTrainingTime(),isShared:ensemble.get('share'),error:ensemble.get('error'),possibleDatasetsLoaded:ensemble.get('possibleDatasetsLoaded'),ensemble:ensemble});}
return(React.DOM.div(null,React.DOM.div({className:"train-header"},React.DOM.h1(null,"Train Ensemble ",this.props.ensemble.id),React.DOM.div({className:"training-actions"},React.DOM.div({className:"row-fluid"},EnsembleActions({ensemble:ensemble,ensembleState:ensemble.get('state'),newModelNames:ensemble.getNewModelName(),allowStartResume:ensemble.allowStartResume(),allowStop:ensemble.allowStop(),allowAddNewModel:ensemble.allowAddNewModel(),allowShare:ensemble.allowShare(),allowPredict:ensemble.allowPredict(),settingsVisible:this.state.settingsVisible,toggleSettings:this.toggleSettings})))),settings,AlertList({models:[ensemble]}),modelsPanel));}});module.exports=EnsembleReact;},{"./ModelComponents.jsx":3,"./Utils":6,"./bootstrap.jsx":9}],6:[function(require,module,exports){"use strict";function isBlank(string){return!/\S/.test(string);}
var Utils={sum:function(values){return _.reduce(values,function(memo,num){return memo+num;},0);},getUrlParam:(function(a){if(a==="")return{};var b={};for(var i=0;i<a.length;++i)
{var p=a[i].split('=');if(p.length!=2)continue;b[p[0]]=decodeURIComponent(p[1].replace(/\+/g," "));}
return b;})(window.location.search.substr(1).split('&')),showAlert:function(message,state,$block){var $alert;$block=typeof $block!=='undefined'?$block:$('div.alert-block');$alert=$('<div class="alert alert-'+state+' fade in"></div>').append('<button class="close" data-dismiss="alert" type="button">×</button>').append(message).alert();$block.prepend($alert);return $alert;},showFadeAlert:function(message,state,ms,$block){var $alert=this.showAlert(message,state,$block);ms=typeof ms!=='undefined'?ms:5000;window.setTimeout(function(){$alert.fadeTo(500,0).slideUp(500,function(){$(this).remove();});},ms);},secondsToStr:function(delta){var hours,minutes,seconds;if(!delta){return'00:00:00';}
delta=delta.toFixed(0);hours=Math.floor(delta/3600);delta%=3600;minutes=Math.floor(delta/60);seconds=delta%60;if(seconds<10){seconds='0'+seconds;}
if(minutes<10){minutes='0'+minutes;}
if(hours<10){hours='0'+hours;}
return hours+':'+minutes+':'+seconds;},isoDateToHumanize:function(date){var dateNew=new Date(date),months=["January","February","March","April","May","June","July","August","September","October","November","December"];return months[dateNew.getMonth()]+' '+dateNew.getDate()+', '+dateNew.getFullYear();},parseErrorResponse:function(xhr){var problem=JSON.parse(xhr.responseText).problem,message;if(typeof problem==='string'){message=problem;}else if('__all__'in problem){message=problem.__all__[0];}else{message=JSON.stringify(problem);}
return message;},objToPaths:function(obj){var ret={},separator='.';for(var key in obj){var val=obj[key];if(val&&(val.constructor===Object||val.constructor===Array)&&!_.isEmpty(val)){var obj2=this.objToPaths(val);for(var key2 in obj2){var val2=obj2[key2];ret[key+separator+key2]=val2;}}else{ret[key]=val;}}
return ret;},startsWith:function(str,sub){return str.slice(0,sub.length)===sub;},uuid:function(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});},BackboneMixin:{componentDidMount:function(){this.getBackboneModels().forEach(function(model){model.on('add change remove',this.forceUpdate.bind(this,null),this);},this);},componentWillUnmount:function(){this.getBackboneModels().forEach(function(model){model.off(null,null,this);},this);}},BackboneEventMixin:{componentDidMount:function(){var eventsModels=this.getBackboneEvents(),model;for(var events in eventsModels){model=eventsModels[events];model.on(events,this.forceUpdate.bind(this,null),this);}},componentWillUnmount:function(){_.values(this.getBackboneEvents()).forEach(function(model){model.off(null,null,this);},this);}},TrainTestDatasetMixin:{getDefaultTrainDatasetId:function(){var id;try{id=this.props.datasets[0][0];}catch(e){}
return id;},getDefaultTestDatasetId:function(){if(this.props.datasets.length<2){return this.getDefaultTrainDatasetId();}
return this.props.datasets[1][0];}},compareMetaData:function(meta,cmeta){if(meta.data_type==='TIMESERIES'){return(meta.binary_input===cmeta.binary_input&&meta.binary_output===cmeta.binary_output&&meta.input_size===cmeta.input_size&&meta.output_size===cmeta.output_size);}else if(meta.data_type=='GENERAL'){return(meta.num_columns===cmeta.num_columns);}else if(meta.data_type=='IMAGES'){return true;}else{console.log("Error");}},ApplyTypesMixin:{applyTypes:function(params){for(var key in this.validation){if(isBlank(params[key])){delete params[key];}
else if(typeof params[key]==="string"){if(this.validation[key].pattern==='digits'){params[key]=parseInt(params[key],10);}else if(this.validation[key].pattern==='number'){params[key]=parseFloat(params[key],10);}}}
return params;}},isBlank:isBlank};module.exports=Utils;},{}],7:[function(require,module,exports){var messages={ensembleSettingsChanged:'Settings have been changed, apply them to take effect.',ensembleSettingsChangedStop:'Settings have been changed, stop training to apply them.',ensembleSettingsErrors:'Settings have errors. Please fix them.',validateMaxGtMin:'Maximum value should be greater than minimum.',valudateMinLtMax:'Minimum value should be lower than maximum.',datafileNeedReparse:'To use this datafile again, please reparse it.',simpleError:'Error. Please refresh your browser and try again.'};var alerts={ensembleSettingsSaved:['Ensemble settings was saved.','success',2000],ensembleResumed:['Ensemble #<%= id %> started.','success',10000],ensembleStopped:['Ensemble #<%= id %> stopped.','warning',10000],ensembleShared:['Ensemble shared.','success'],oneMoreModelAdded:['New model added to the ensemble.','success',10000]};var trigger=function(model,vars){"use strict";var values=_.clone(alerts[this]);values.unshift('alert');values[1]=_.template(values[1])(vars);model.trigger.apply(model,values);};var getXhrErrorParser=function(model){"use strict";return function(xhr){var problem=JSON.parse(xhr.responseText).problem,message;if(typeof problem==='string'){message=problem;}else if('__all__'in problem){message=problem.__all__[0];}else{message=JSON.stringify(problem);}
model.trigger('alert',message,'error');};};module.exports={alerts:alerts,msg:messages,getXhrErrorParser:getXhrErrorParser};for(var key in alerts){if(alerts.hasOwnProperty(key)){if(module.exports.hasOwnProperty(key)){throw"Alert redifinition";}
module.exports[key]=trigger.bind(key);}}},{}],8:[function(require,module,exports){"use strict";var posts={ensembleSettings:'/api/ensemble/settings/',ensembleResume:'/api/ensemble/resume/',ensembleStop:'/api/ensemble/cancel/',ensembleShare:'/api/ensemble/share/',ensembleAddModel:'/api/ensemble/add/'};var gets={ensemble:function(params){return'/api/train/state/?ensemble='+params.id;}};var post=function(data,done,error){$.ajax({url:posts[this],type:'POST',data:JSON.stringify(data,null,2),dataType:'json'}).done(done).error(error);};module.exports={post:{},get:{}};for(var key in posts){if(posts.hasOwnProperty(key)){module.exports.post[key]=post.bind(key);}}
for(var key in gets){if(gets.hasOwnProperty(key)){module.exports.get[key]=gets[key].bind(null);}}},{}],9:[function(require,module,exports){"use strict";var Utils=require('./Utils');var BootstrapAlert=React.createClass({displayName:'BootstrapAlert',render:function(){var type=this.props.type,classes;if(type){classes='alert alert-'+type;}else{classes='alert';}
return(React.DOM.div({className:classes},React.DOM.button({className:"close",onClick:this.props.handleClose,type:"button"},"×"),React.DOM.span({dangerouslySetInnerHTML:{__html:this.props.message}})));}});var Switch=React.createClass({displayName:'Switch',componentDidMount:function(){var value=this.props.value||false,handleChange=this.props.handleChange,rootNode=this.getDOMNode();$(rootNode).bootstrapSwitch();$(rootNode).bootstrapSwitch('setState',value,true);$(rootNode).on('switch-change',function(_,data){handleChange(data.value);});},componentWillUnmount:function(){$(this.getDOMNode()).off('switch-change');},render:function(){return(React.DOM.div({id:"emailSwitch",className:"switch-mini",'data-on':"success",'data-off':"default"},React.DOM.input({type:"checkbox"})));}});var BootstrapInListAlert=React.createClass({displayName:'BootstrapInListAlert',componentDidMount:function(){if(this.props.seconds!==undefined){var timeoutId=setTimeout(this.handleHidden,this.props.seconds);this.setState({timeoutId:timeoutId});}},getInitialState:function(){return{};},handleHidden:function(){if(this.state.timeoutId!==undefined){clearTimeout(this.state.timeoutId);}
$(this.getDOMNode()).hide();this.props.handleHidden(this.props.key);},render:function(){var type=this.props.type,classes;if(type){classes='alert alert-'+type;}else{classes='alert';}
return(React.DOM.div({className:classes},React.DOM.button({className:"close",onClick:this.handleHidden,type:"button"},"×"),React.DOM.span({dangerouslySetInnerHTML:{__html:this.props.message}})));}});var AlertList=React.createClass({displayName:'AlertList',componentDidMount:function(){this.props.models.forEach(function(model){model.on('alert',this.addAlert,this);},this);},componentWillUnmount:function(){this.props.models.forEach(function(model){model.off(null,null,this);},this);},getInitialState:function(){return{alerts:{}};},addAlert:function(message,type,seconds){var alerts=_.clone(this.state.alerts);alerts[Utils.uuid()]={message:message,type:type,seconds:seconds};this.setState({alerts:alerts});},removeAlert:function(key){var alerts=_.clone(this.state.alerts);delete alerts[key];this.setState({alerts:alerts});},render:function(key){var alertsComponent=null,_alert,alerts=this.state.alerts,handleHidden=this.removeAlert;alertsComponent=Object.keys(alerts).map(function(key){_alert=alerts[key];return BootstrapInListAlert({message:_alert.message,seconds:_alert.seconds,type:_alert.type,key:key,handleHidden:handleHidden});}).reverse();return React.DOM.div(null,alertsComponent);}});var BootstrapButton=React.createClass({displayName:'BootstrapButton',render:function(){return this.transferPropsTo(React.DOM.a({role:"button",className:"btn"},this.props.children));}});var BootstrapSelect=React.createClass({displayName:'BootstrapSelect',handleChange:function(event){this.setState({value:event.target.value});},getInitialState:function(){return{value:this.props.value};},render:function(){var options=this.props.values.map(function(val){return(React.DOM.option({key:val[0],value:val[0]},val[1]));});return React.DOM.select({defaultValue:this.state.value,onChange:this.handleChange},options);}});var BootstrapSimpleSelect=React.createClass({displayName:'BootstrapSimpleSelect',render:function(){var options=this.props.values.map(function(val){return(React.DOM.option({key:val[0],value:val[0]},val[1]));});return React.DOM.select({value:this.props.value,onChange:this.props.handleChange},options);}});var BootstrapModal=React.createClass({displayName:'BootstrapModal',componentDidMount:function(){$(this.getDOMNode()).modal({backdrop:'static',keyboard:false,show:false});},componentWillUnmount:function(){$(this.getDOMNode()).off('hidden',this.handleHidden);},close:function(){$(this.getDOMNode()).modal('hide');},open:function(){$(this.getDOMNode()).modal('show');},render:function(){var confirmButton=null;var cancelButton=null;if(this.props.confirm){confirmButton=(BootstrapButton({href:"#",onClick:this.handleConfirm,className:this.props.confirmButtonClass},this.props.confirm));}
if(this.props.cancel){cancelButton=(BootstrapButton({href:"#",onClick:this.handleCancel},this.props.cancel));}
return(React.DOM.div({className:"modal hide fade "+this.props.classes},React.DOM.div({className:"modal-header"},React.DOM.button({type:"button",className:"close",onClick:this.handleCancel,dangerouslySetInnerHTML:{__html:'&times'}}),React.DOM.h3(null,this.props.title)),React.DOM.div({className:"modal-body"},this.props.children),React.DOM.div({className:"modal-footer"},cancelButton,confirmButton)));},handleCancel:function(e){e.preventDefault();if(this.props.onCancel){this.props.onCancel();}},handleConfirm:function(e){e.preventDefault();if(this.props.onConfirm){this.props.onConfirm();}}});var BootstrapSlider=React.createClass({displayName:'BootstrapSlider',getInitialState:function(){return{sliderValue:0};},componentDidMount:function(){var self=this;var slider=this.refs.slider.getDOMNode();$(slider).slider({range:'min',min:this.props.min,max:this.props.max,step:this.props.step,value:this.props.value,create:function(event,ui){if(self.props.handleSlide){self.props.handleSlide(self.props.value);}
if(self.props.value===undefined){self.setState({sliderValue:0});}else{self.setState({sliderValue:self.props.value});}},slide:function(event,ui){if(self.props.handleSlide){self.props.handleSlide(ui.value);}
self.setState({sliderValue:ui.value});}});},render:function(){return(React.DOM.div(null,this.props.percentage?React.DOM.div({className:"slider-value"},this.state.sliderValue,this.props.suffix):'',React.DOM.div({className:"slider",ref:"slider"})));}});module.exports={Modal:BootstrapModal,Button:BootstrapButton,Select:BootstrapSelect,SimpleSelect:BootstrapSimpleSelect,Alert:BootstrapAlert,AlertList:AlertList,Slider:BootstrapSlider,Switch:Switch};},{"./Utils":6}],10:[function(require,module,exports){"use strict";var Utils=require('../Utils');var Rect=React.createClass({displayName:'Rect',tooltipCreate:function(e){$(e.target).tooltip({placement:'top',container:'body',title:"T"+this.props.key+": "+(this.props.value*100).toFixed(4)+"%"});},tooltipDestroy:function(e){$(e.target).tooltip('destroy');},render:function(){return(React.DOM.rect({onMouseEnter:this.tooltipCreate,onMouseLeave:this.tooltipDestroy,x:this.props.x,y:this.props.y,width:this.props.width,height:this.props.height,className:this.props.classes,'data-toggle':"tooltip"}));}});var AccuracyMatrix=React.createClass({displayName:'AccuracyMatrix',getAccuracy:function(gridWidth,gridHeight,matrix){var data=[];var gridItemWidth=gridWidth/matrix[0].length;var gridItemHeight=gridHeight/matrix.length;var min_len=Math.min(gridItemHeight,gridItemWidth);if(min_len<1){gridItemWidth=1;gridItemHeight=1;}else if(min_len>20){gridItemWidth=20;gridItemHeight=20;}else{gridItemWidth=min_len;gridItemHeight=min_len;}
var startX=0;var startY=0;var stepX=gridItemWidth;var stepY=gridItemHeight;var xpos=startX;var ypos=startY;var newValue=0;var count=0;for(var index_a=0;index_a<matrix.length;index_a++)
{data.push([]);for(var index_b=0;index_b<matrix[0].length;index_b++)
{newValue=matrix[index_a][index_b];data[index_a].push({time:index_b,value:newValue,width:gridItemWidth,height:gridItemHeight,x:xpos,y:ypos,count:count});xpos+=stepX;count+=1;}
xpos=startX;ypos+=stepY;}
return data;},render:function(){var data=this.getAccuracy(this.props.width,this.props.height,this.props.stat.get('test_accuracy_matrix')),cells=null,maxVal=(d3.max(data[0],function(d){return d.value;})>1)?100.0:1.0,color=d3.scale.quantize().domain([0,maxVal]).range(d3.range(11).map(function(d){return'q'+d+'-11';}));cells=data[0].map(function(d){return Rect({key:d.time,x:d.x,y:d.y,width:d.width,height:d.height,classes:"cell "+color(d.value),value:d.value});});return(React.DOM.svg({width:this.props.width,height:this.props.height,className:"RdYlGn"},React.DOM.g({className:"row"},cells)));}});var AccuracyMatrixTableRow=React.createClass({displayName:'AccuracyMatrixTableRow',getDefaultProps:function(){return{height:20,width:600};},render:function(){return(React.DOM.tr(null,React.DOM.td(null,this.props.stat.get('iteration')),React.DOM.td(null,AccuracyMatrix({stat:this.props.stat,width:this.props.width,height:this.props.height})),React.DOM.td(null,(this.props.stat.get('test_accuracy')*100).toFixed(4),"%"),React.DOM.td(null,Utils.secondsToStr(this.props.stat.get('time')))));}});var AccuracyMatrixTable=React.createClass({displayName:'AccuracyMatrixTable',render:function(){var charts=this.props.stats.map(function(stat){return AccuracyMatrixTableRow({stat:stat,key:stat.id});});charts.reverse();return(React.DOM.table({className:"table all-accuracy-charts"},React.DOM.thead(null,React.DOM.tr(null,React.DOM.th({className:"span1"},"Iteration"),React.DOM.th(null,"Accuracy Matrix"),React.DOM.th(null,"Test Accuracy"),React.DOM.th(null,"Iter. Time"))),React.DOM.tbody(null,charts)));}});var BarXaxis=React.createClass({displayName:'BarXaxis',updateAxes:function(){var svg=d3.select(this.getDOMNode());var xAxis=d3.svg.axis().scale(this.props.x).orient("bottom");svg.call(xAxis);},componentDidMount:function(){this.updateAxes();},componentDidUpdate:function(){this.updateAxes();},render:function(){return React.DOM.g({className:"x axis",transform:"translate(0,"+this.props.height+")"});}});var BarYaxis=React.createClass({displayName:'BarYaxis',updateAxes:function(){var formatPercent=d3.format(".0%");var svg=d3.select(this.getDOMNode());var yAxis=d3.svg.axis().scale(this.props.y).orient("left").tickFormat(formatPercent);svg.call(yAxis);},componentDidMount:function(){this.updateAxes();},componentDidUpdate:function(){this.updateAxes();},render:function(){return React.DOM.g({className:"y axis"});}});var CMBarChart=React.createClass({displayName:'CMBarChart',getDefaultProps:function(){return{margin:{top:20,right:20,bottom:30,left:60}};},handleSelectClass:function(classNum,e){this.props.handleSelectClass(classNum);},render:function(){var bars=null,props=this.props,data=props.data;var newWidth=85*props.data.length,margin=props.margin;var width=(newWidth>props.width)?props.width:newWidth;width=width-margin.left-margin.right;var height=props.height-margin.top-margin.bottom;var x=d3.scale.ordinal().rangeRoundBands([0,width],0.3);var y=d3.scale.linear().range([height,0]);data.forEach(function(d){d.percent=+d.percent;});x.domain(data.map(function(d){return d.class;}));y.domain([0,1]);bars=data.map(function(d){return React.DOM.rect({onMouseEnter:this.handleSelectClass.bind(this,d.class),onMouseLeave:this.props.handleUnselectClass,className:"bar",key:d.class,x:x(d.class),width:x.rangeBand(),y:y(d.percent),height:height-y(d.percent)});},this);return(React.DOM.svg({width:width+margin.left+margin.right,height:height+margin.top+margin.bottom},React.DOM.g({transform:"translate("+margin.left+","+margin.top+")"},bars,BarXaxis({x:x,height:height}),BarYaxis({y:y}))));}});module.exports=AccuracyMatrixTable;},{"../Utils":6}],11:[function(require,module,exports){"use strict";var Utils=require('../Utils');var BarXaxis=React.createClass({displayName:'BarXaxis',updateAxes:function(){var svg=d3.select(this.getDOMNode());var xAxis=d3.svg.axis().scale(this.props.x).orient("bottom");svg.call(xAxis);},componentDidMount:function(){this.updateAxes();},componentDidUpdate:function(){this.updateAxes();},render:function(){return React.DOM.g({className:"x axis",transform:"translate(0,"+this.props.height+")"});}});var BarYaxis=React.createClass({displayName:'BarYaxis',updateAxes:function(){var formatPercent=d3.format(".0%");var svg=d3.select(this.getDOMNode());var yAxis=d3.svg.axis().scale(this.props.y).orient("left").tickFormat(formatPercent);svg.call(yAxis);},componentDidMount:function(){this.updateAxes();},componentDidUpdate:function(){this.updateAxes();},render:function(){return React.DOM.g({className:"y axis"});}});var CMBarChart=React.createClass({displayName:'CMBarChart',getDefaultProps:function(){return{margin:{top:20,right:20,bottom:30,left:60}};},handleSelectClass:function(classNum,e){this.props.handleSelectClass(classNum);},render:function(){var bars=null,props=this.props,data=props.data;var newWidth=85*props.data.length,margin=props.margin;var width=(newWidth>props.width)?props.width:newWidth;width=width-margin.left-margin.right;var height=props.height-margin.top-margin.bottom;var x=d3.scale.ordinal().rangeRoundBands([0,width],0.3);var y=d3.scale.linear().range([height,0]);data.forEach(function(d){d.percent=+d.percent;});x.domain(data.map(function(d){return d.class;}));y.domain([0,1]);bars=data.map(function(d){return React.DOM.rect({onMouseEnter:this.handleSelectClass.bind(this,d.class),onMouseLeave:this.props.handleUnselectClass,className:"bar",key:d.class,x:x(d.class),width:x.rangeBand(),y:y(d.percent),height:height-y(d.percent)});},this);return(React.DOM.svg({width:width+margin.left+margin.right,height:height+margin.top+margin.bottom},React.DOM.g({transform:"translate("+margin.left+","+margin.top+")"},bars,BarXaxis({x:x,height:height}),BarYaxis({y:y}))));}});var ConfusionMatrixChart=React.createClass({displayName:'ConfusionMatrixChart',predictValues:function(matrix,predicted){return _.values(matrix).map(function(d){return d[predicted]||0;});},getInitialState:function(){return{selectedCol:undefined,selectedRow:undefined};},handleSelectRow:function(rowNum){this.setState({selectedRow:rowNum});},handleSelectCol:function(colNum){this.setState({selectedCol:colNum});},handleUnselectClass:function(){this.setState({selectedCol:undefined,selectedRow:undefined});},render:function(){var barChartName,props=this.props,rows=null,header=null,firstTd=null,msize=_.size(props.matrix),sum={},total={},classes=_.keys(props.matrix);classes.forEach(function(actual){total[actual]=Utils.sum(_.values(props.matrix[actual]));});if(props.groupByPredict){barChartName="Distribution of model predictions ("+this.props.name+")";for(var predicted=0;predicted<msize;predicted++){sum[predicted]=Utils.sum(this.predictValues(props.matrix,predicted));}}else{barChartName="Distribution of correct classifications ("+this.props.name+")";sum=total;}
header=classes.map(function(actual){return React.DOM.td({key:actual},React.DOM.b(null,"class ",actual));});var data=[];rows=classes.map(function(actual,i){var row=classes.map(function(predicted){var summa=(props.groupByPredict)?sum[predicted]:sum[actual];var value=props.matrix[actual][predicted]||0,percent=(summa)?value/summa:0,color=1-percent;if(actual===predicted){if(total[actual]===0){color=1;}else{color=percent;}
data.push({class:actual,percent:percent});}
color=(color*10).toFixed(0);var cls="conf-matrix-cell q"+color+"-11";if(predicted===this.state.selectedCol){cls+=" confusion-col";}
return React.DOM.td({key:predicted,className:cls},value,React.DOM.br(null)," ",(percent*100).toFixed(1).replace(/\.?0+$/,''),"%");},this);firstTd=null;if(!i){firstTd=React.DOM.td({rowSpan:msize,className:"span1"},React.DOM.strong({dangerouslySetInnerHTML:{__html:'ACTUAL'.split('').join('<br />')}}));}
var cls="";if(actual===this.state.selectedRow){cls+=" confusion-row";}
return(React.DOM.tr({key:actual,className:cls},firstTd,React.DOM.td({className:"span2"},React.DOM.b(null,"class ",actual),React.DOM.br(null)," total: ",total[actual]),row));},this);sum=Utils.sum(total);var adata=[];for(var key in total){if(total.hasOwnProperty(key)){adata.push({class:key,percent:total[key]/sum});}}
return(React.DOM.div({className:"train-sets"},React.DOM.h4(null,props.name),React.DOM.table({className:"table conf-matrix"},React.DOM.tbody(null,React.DOM.tr(null,React.DOM.td({colSpan:"2",rowSpan:"2"},"Iteration ",props.stat.get('iteration')),React.DOM.td({colSpan:classes.length},React.DOM.strong(null,"PREDICTED"))),header,rows)),React.DOM.div({className:"bar-chart"},React.DOM.h4(null,"Class membership histogram (",props.name,")"),CMBarChart({width:props.width,height:props.height/2,data:adata,handleSelectClass:this.handleSelectCol,handleUnselectClass:this.handleUnselectClass})),React.DOM.div({className:"bar-chart bar-chart-distribution"},React.DOM.h4(null,barChartName),CMBarChart({width:props.width,height:props.height/2,data:data,handleSelectClass:(props.groupByPredict)?this.handleSelectCol:this.handleSelectRow,handleUnselectClass:this.handleUnselectClass}))));}});var Rect=React.createClass({displayName:'Rect',tooltipCreate:function(e){$(e.target).tooltip({placement:'top',container:'body',title:this.props.title});},tooltipDestroy:function(e){$(e.target).tooltip('destroy');},render:function(){var props=this.props;return React.DOM.rect({onMouseEnter:this.tooltipCreate,onMouseLeave:this.tooltipDestroy,width:props.width,height:props.height,x:props.x,y:props.y,'data-rect-color':"q"+props.color+"-11"});}});var SmallConfusionMatrix=React.createClass({displayName:'SmallConfusionMatrix',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.stats];},predictValues:function(matrix,predicted){return _.values(matrix).map(function(d){return d[predicted]||0;});},render:function(){var matrix=this.props.stats.last().get('confusion_matrix');var props=this.props,rows=null,msize=_.size(matrix),cellsize=(300/msize>20)?20:(300/msize),sum={},total={},classes=_.keys(matrix);classes.forEach(function(actual){total[actual]=Utils.sum(_.values(matrix[actual]));});for(var predicted=0;predicted<msize;predicted++){sum[predicted]=Utils.sum(this.predictValues(matrix,predicted));}
rows=classes.map(function(actual,i){var row=classes.map(function(predicted,j){var summa=sum[predicted];var value=matrix[actual][predicted]||0,percent=(summa)?value/summa:0,color=1-percent;if(actual===predicted){if(total[actual]===0){color=1;}else{color=percent;}}
color=(color*10).toFixed(0);return Rect({width:cellsize,height:cellsize,x:cellsize*j,y:cellsize*i,key:j,title:"Actual: "+actual+", Predicted: "+predicted+", Percent: "+(percent*100).toFixed(4)+"%",color:color});});return(React.DOM.g({key:i},row));});return(React.DOM.svg({className:"RdYlGn",width:300,height:300},rows));}});module.exports={ConfusionMatrixChart:ConfusionMatrixChart,SmallConfusionMatrix:SmallConfusionMatrix};},{"../Utils":6}],12:[function(require,module,exports){"use strict";var Utils=require('../Utils');var humanNames={'train_accuracy':'Training Accuracy','train_last_10_steps_acc':'Training Accuracy at Final 10 Steps','test_last_10_steps_acc':'Testing Accuracy at Final 10 Steps','test_accuracy':'Test Accuracy','grad1':'First Gradient','grad2':'Second Gradient (approx. Hessian)','train_loss':'Training Loss','test_loss':'Test Loss','total_num_cg':'Number of CG iterations','norm_CG_x':'Norm of CG','1_h_norm':'Input2Hidden Bias','h_f_norm':'Hidden2Factored','f_h_norm':'Factored2Hidden','1_f_norm':'Input2Factored Bias','v_h_norm':'Input2Hidden','v_f_norm':'Input2Factored','h_o_norm':'Hidden2Output','momentum':'Momentum','learning_rate':'Learning Rate','last_layer_row_norms_mean':'Last Layer Row Norms Mean','last_layer_col_norms_mean':'Last Layer Column Norms Mean','iteration_time':'Iterations Time (seconds)'};function getHumanName(name){var val=humanNames[name];return(val)?val:name;}
var XAxis=React.createClass({displayName:'XAxis',updateAxes:function(options){var svg=d3.select(this.getDOMNode()),width=this.props.width-this.props.margin.left-this.props.margin.right,xAxis=d3.svg.axis().scale(this.props.x).orient("bottom");svg.call(xAxis);if(options.isMount){svg.append('text').attr('x',(width/2+this.props.margin.left)).attr('y',30).style("text-anchor","end").text('Iteration');}},componentDidMount:function(){this.updateAxes({isMount:true});},componentDidUpdate:function(){this.updateAxes({});},render:function(){var height=this.props.height-this.props.margin.top-this.props.margin.bottom,transform="translate(0,"+height+")";return React.DOM.g({className:"x axis",transform:transform});}});var YAxis=React.createClass({displayName:'YAxis',updateAxes:function(){var orient=(this.props.isRight)?"right":"left",svg=d3.select(this.getDOMNode()),yAxis=d3.svg.axis().scale(this.props.y).orient(orient);svg.call(yAxis);},componentDidMount:function(){this.updateAxes();},componentDidUpdate:function(){this.updateAxes();},render:function(){if(this.props.isRight){var width=this.props.width-this.props.margin.right-this.props.margin.left;var transform="translate("+width+" ,0)";return React.DOM.g({className:"y axis",transform:transform});}
return React.DOM.g({className:"y axis"});}});var Chart=React.createClass({displayName:'Chart',render:function(){var attr="translate("+this.props.margin.left+","+this.props.margin.top+")";var yAxisRight=null;if(this.props.yAxisRight){yAxisRight=YAxis({y:this.props.yAxisRight,isRight:true,margin:this.props.margin,width:this.props.width});}
return(React.DOM.svg({onMouseMove:this.props.handleMouseMove,onMouseLeave:this.props.handleMouseOut,width:this.props.width,height:this.props.height},React.DOM.g({transform:attr,ref:"el"},this.props.children,XAxis({x:this.props.xAxis,width:this.props.width,height:this.props.height,margin:this.props.margin}),YAxis({y:this.props.yAxis}),yAxisRight)));}});var Line=React.createClass({displayName:'Line',getDefaultProps:function(){return{path:'',color:'blue',width:1.5};},render:function(){return(React.DOM.path({d:this.props.path,stroke:this.props.color,strokeWidth:this.props.width,fill:"none"}));}});var DataSeries=React.createClass({displayName:'DataSeries',getDefaultProps:function(){return{data:[],interpolate:'cardinal'};},render:function(){var props=this.props,yScale=props.yScale,xScale=props.xScale,path=d3.svg.line().x(function(d){return xScale(d.x);}).y(function(d){return yScale(d.y);}).interpolate(props.interpolate);return(Line({path:path(props.data),color:props.color}));}});var LineChart=React.createClass({displayName:'LineChart',getDefaultProps:function(){return{color:"cornflowerblue",width:800,height:300,yPadFactor:0.1,margin:{top:20,right:50,bottom:30,left:70}};},handleMouseMove:function(dataFull,x,y,yRight,rightYstatsNames,e){var eventX=e.nativeEvent.offsetX||e.nativeEvent.layerX;var eventY=e.nativeEvent.offsetY||e.nativeEvent.layerY;var nearestPoint,valueY,valueX;_.pairs(dataFull).forEach(function(d){var name=d[0],data=d[1];var domainX=x.invert(eventX-this.props.margin.left);var domainIndexScale=d3.scale.linear().domain([data[0].x,data.slice(-1)[0].x]).range([0,data.length-1]);var approximateIndex=Math.round(domainIndexScale(domainX));var dataIndex=Math.min(approximateIndex||0,data.length-1);if(dataIndex<0)dataIndex=0;var value=data[dataIndex];if(_.contains(rightYstatsNames,name)){valueY=yRight(value.y)+this.props.margin.top;}else{valueY=y(value.y)+this.props.margin.top;}
var distance=Math.sqrt(Math.pow(Math.abs(x(value.x)+this.props.margin.left-eventX),2)+
Math.pow(Math.abs(valueY-eventY),2));if(!nearestPoint||distance<nearestPoint.distance){valueX=x(value.x)+this.props.margin.left;value.name=name;nearestPoint={distance:distance,x:valueX,y:valueY,value:value};}},this);this.props.drawNearestPoint(nearestPoint);},calculateAxis:function(minX,maxX,minY,maxY,minYRight,maxYRight){var width=this.props.width-this.props.margin.left-this.props.margin.right,height=this.props.height-this.props.margin.top-this.props.margin.bottom,x=d3.scale.linear().range([0,width]).domain([minX,maxX]),y=d3.scale,yRight=d3.scale;y=(this.props.withLogScale)?y.log():y.linear();y.range([height,0]).domain([minY,maxY]);if(minYRight!==undefined&&maxYRight!==undefined){yRight=(this.props.withLogScale)?yRight.log():yRight.linear();yRight.range([height,0]).domain([minYRight,maxYRight]);}
return{x:x,y:y,yRight:yRight};},render:function(){var data=this.props.data,yScale,rightYstatsNames=this.props.rightYstatsNames||[],props=this.props,size={width:this.props.width,height:this.props.height};var maxYRight;var minYRight;var yScaleRight;var dataFilteredYLeft=_.flatten(_.pairs(data).filter(function(d){if(rightYstatsNames&&_.contains(rightYstatsNames,d[0])){return false;}
return true;}));var dataFilteredYRight=_.flatten(_.pairs(data).filter(function(d){if(rightYstatsNames&&_.contains(rightYstatsNames,d[0])){return true;}
return false;}));var maxYLeft=d3.max(dataFilteredYLeft,function(d){return d.y;});maxYLeft*=(1+this.props.yPadFactor);var minYLeft=d3.min(dataFilteredYLeft,function(d){return d.y;});minYLeft*=(1-this.props.yPadFactor);var maxX=d3.max(_.flatten(_.values(data)),function(d){return d.x;});var minX=0;var xScale=d3.scale.linear().domain([minX,maxX]).range([0,this.props.width-this.props.margin.left-this.props.margin.right]);var yScaleLeft=d3.scale;yScaleLeft=(this.props.withLogScale)?yScaleLeft.log():yScaleLeft.linear();yScaleLeft.domain([minYLeft,maxYLeft]).range([this.props.height-this.props.margin.top-this.props.margin.bottom,0]);if(dataFilteredYRight.length>0){maxYRight=d3.max(dataFilteredYRight,function(d){return d.y;});minYRight*=(1+this.props.yPadFactor);minYRight=d3.min(dataFilteredYRight,function(d){return d.y;});minYRight*=(1-this.props.yPadFactor);yScaleRight=d3.scale;yScaleRight=(this.props.withLogScale)?yScaleRight.log():yScaleRight.linear();yScaleRight.domain([minYRight,maxYRight]).range([this.props.height-this.props.margin.top-this.props.margin.bottom,0]);}
var charts=_.pairs(data).map(function(d){if(_.contains(rightYstatsNames,d[0])){yScale=yScaleRight;}else{yScale=yScaleLeft;}
return DataSeries({key:d[0],data:d[1],size:size,xScale:xScale,yScale:yScale,color:this.props.colors(d[0])});},this);var axis=this.calculateAxis(minX,maxX,minYLeft,maxYLeft,minYRight,maxYRight);return(Chart({width:this.props.width,height:this.props.height,maxX:maxX,maxY:maxYLeft,minX:minX,minY:minYLeft,margin:this.props.margin,withLogScale:this.props.withLogScale,handleMouseMove:this.handleMouseMove.bind(this,data,axis.x,axis.y,axis.yRight,rightYstatsNames),handleMouseOut:this.props.handleMouseOut,xAxis:axis.x,yAxis:axis.y,yAxisRight:(rightYstatsNames.length>0)?axis.yRight:undefined},charts));}});var TrainStatChart=React.createClass({displayName:'TrainStatChart',getInitialState:function(){var state={};if(this.props.withLogScale){state.isLogScale=true;}
this.props.statsNames.forEach(function(name){state[name]=true;},this);return state;},toggleScale:function(){this.setState({isLogScale:!this.state.isLogScale});},toggleChart:function(name,e){var update={};update[name]=e.target.checked;this.setState(update);},drawNearestPoint:function(nearestPoint){this.setState({isMouseOver:true,mousePointX:nearestPoint.x,mousePointY:nearestPoint.y,mouseValue:nearestPoint.value});},handleMouseOut:function(){this.setState({isMouseOver:false});},render:function(){var logScale=null,data={},controls=[],line=null,style,mousePoint=null;if(this.props.withLogScale){logScale=(React.DOM.label(null,React.DOM.input({type:"checkbox",checked:this.state.isLogScale,onChange:this.toggleScale}),"Log scale"));}
this.props.statsNames.forEach(function(name){if(this.state[name]){data[name]=this.props.data.filter(function(d){return d[name]!==undefined;}).map(function(d){return{x:d.iteration,y:d[name]};});}
if(!this.props.noControls){style={color:this.props.colors(name)};controls.push(React.DOM.label({key:name,style:style},React.DOM.input({type:"checkbox",checked:this.state[name],onChange:this.toggleChart.bind(this,name)})," ",getHumanName(name)));}},this);if(_.keys(data).length>0){line=LineChart({width:this.props.width,height:this.props.height,data:data,withLogScale:this.state.isLogScale,colors:this.props.colors,drawNearestPoint:this.drawNearestPoint,handleMouseOut:this.handleMouseOut,rightYstatsNames:this.props.rightYstatsNames});}
if(this.state.isMouseOver){mousePoint=(React.DOM.div({className:"detail",style:{left:this.state.mousePointX}},React.DOM.div({className:"item active",style:{"top":this.state.mousePointY}},getHumanName(this.state.mouseValue.name)+': '+this.state.mouseValue.y.toFixed(4)),React.DOM.div({className:"dot active",style:{"top":this.state.mousePointY}})));}
return(React.DOM.div({className:"chart-box"},React.DOM.div({className:"chart-header"},React.DOM.h4(null,this.props.chartName),logScale," ",controls),React.DOM.div({className:"graph"},line,mousePoint)));}});module.exports=TrainStatChart;},{"../Utils":6}],13:[function(require,module,exports){"use strict";var Utils=require('../Utils.js'),Bootstrap=require('../bootstrap.jsx'),BootstrapSlider=Bootstrap.Slider;var ParamSlider=React.createClass({displayName:'ParamSlider',onSlide:function(value){this.props.model.set(this.props.key,value);},render:function(){var name=this.props.key;return(React.DOM.tr(null,React.DOM.td(null,React.DOM.strong(null,this.props.label),React.DOM.br(null),React.DOM.span({dangerouslySetInnerHTML:{__html:this.props.help}})),React.DOM.td(null,BootstrapSlider({percentage:"true",suffix:"%",min:this.props.min,max:this.props.max,step:this.props.step,value:this.props.model.get(name),handleSlide:this.onSlide}))));}});var ParamSwitch=React.createClass({displayName:'ParamSwitch',componentDidMount:function(){var rootNode=$(this.getDOMNode()).find('.param-switch');rootNode.bootstrapSwitch();rootNode.bootstrapSwitch('setState',this.props.model.get(this.props.key),true);rootNode.on('switch-change',$.proxy(function(_,data){this.props.model.set(this.props.key,data.value);},this));},componentWillUnmount:function(){$(this.getDOMNode()).find('.param-switch').off('switch-change');},render:function(){return(React.DOM.tr(null,React.DOM.td(null,React.DOM.strong(null,this.props.label),React.DOM.br(null),React.DOM.span({dangerouslySetInnerHTML:{__html:this.props.help}})),React.DOM.td(null,React.DOM.div({className:"switch-mini param-switch",'data-on':"success",'data-off':"default"},React.DOM.input({type:"checkbox"})))));}});var ParamCheckbox=React.createClass({displayName:'ParamCheckbox',handleChange:function(e){this.props.model.set(this.props.key,e.target.checked);},render:function(){var name=this.props.key,error=this.props.errors[name];return(React.DOM.tr(null,React.DOM.td(null,React.DOM.strong(null,this.props.label),React.DOM.br(null),React.DOM.span({dangerouslySetInnerHTML:{__html:this.props.help}})),React.DOM.td(null,React.DOM.input({type:"checkbox",className:"input-mini",checked:this.props.model.get(name),onChange:this.handleChange}),(error)?React.DOM.div({className:"settings-error"},error):'')));}});var ParamInput=React.createClass({displayName:'ParamInput',handleChange:function(e){if(Utils.isBlank(e.target.value)){this.props.model.set(this.props.key,'');}else{this.props.model.set(this.props.key,e.target.value);}},render:function(){var name=this.props.key,error=this.props.errors[name],labels=this.props.model.labels;return(React.DOM.tr(null,React.DOM.td(null,React.DOM.strong(null,(this.props.label)?this.props.label:labels[name]),React.DOM.br(null),React.DOM.span({dangerouslySetInnerHTML:{__html:this.props.help}})," "),React.DOM.td(null,React.DOM.input({type:"text",className:"input-dark input-mini",value:this.props.model.get(name),onChange:this.handleChange,placeholder:this.props.placeholder}),(error)?React.DOM.div({className:"settings-error"},error):'')));}});var AutoencoderComponent=React.createClass({displayName:'AutoencoderComponent',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.model];},render:function(){var model=this.props.model,errors=this.props.model.validate()||{};return(React.DOM.div(null,React.DOM.h4({className:"select-item text-center"},"Model params "),React.DOM.div(null,React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"maxnum_iter",label:"number of iterations",model:model,errors:errors}),ParamInput({key:"batch_size",label:"size of batches",model:model,errors:errors}),ParamInput({key:"hidden_outputs",label:"size of hidden layer",model:model,errors:errors,placeholder:20}),ParamInput({key:"noise_level",label:"noise level",model:model,errors:errors,placeholder:0.2}),ParamInput({key:"learning_rate_init",label:"learning rate",model:model,errors:errors,placeholder:0.001}),ParamInput({key:"irange",label:"Range of uniform initialization",model:model,errors:errors,placeholder:0.05}))))));}});var MRNNComponent=React.createClass({displayName:'MRNNComponent',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.model];},render:function(){var model=this.props.model,errors=this.props.model.validate()||{};return(React.DOM.div(null,React.DOM.h4({className:"select-item text-center"},"Model params "),React.DOM.div(null,React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"maxnum_iter",label:"number of iterations",model:model,errors:errors,placeholder:20}),ParamInput({key:"h",label:"number of hidden units",model:model,errors:errors,placeholder:2}),ParamInput({key:"f",label:"number of factored units",model:model,errors:errors,placeholder:2}),ParamInput({key:"cg_min_cg",label:"minimum number of conjugate gradient iterations",model:model,errors:errors,placeholder:1}),ParamInput({key:"cg_max_cg",label:"maximum number of conjugate gradient iterations",model:model,errors:errors,placeholder:40}),ParamInput({key:"lambda",label:"damping parameter lambda",model:model,errors:errors,placeholder:0.01}),ParamInput({key:"mu",label:"damping parameter mu",model:model,errors:errors,placeholder:0.001}))))));}});var CONVComponent=React.createClass({displayName:'CONVComponent',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.model];},render:function(){var model=this.props.model,errors=this.props.model.validate()||{};return(React.DOM.div(null,React.DOM.h4({className:"select-item text-center"},"Model params "),React.DOM.div(null,React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"maxnum_iter",label:"number of iterations",model:model,errors:errors}),ParamInput({key:"img_size",label:"image size",help:"must be a multiple of 8",model:model,errors:errors}),ParamInput({key:"dropout",label:"dropout",model:model,errors:errors,placeholder:0.5}),ParamInput({key:"learning_rate_init",label:"learning rate",model:model,errors:errors,placeholder:0.001}),ParamInput({key:"momentum_init",label:"momentum",model:model,errors:errors,placeholder:0.5}),ParamCheckbox({key:"random_sparse",label:"Use random sparse layers",model:model,errors:errors}))))));}});module.exports={input:ParamInput,checkbox:ParamCheckbox,slider:ParamSlider,switch:ParamSwitch,Autoencoder:AutoencoderComponent,MRNN:MRNNComponent,CONV:CONVComponent};},{"../Utils.js":6,"../bootstrap.jsx":9}],14:[function(require,module,exports){"use strict";var ParamsComponents=require('./Components.jsx'),AutoencoderComponent=ParamsComponents.Autoencoder,CONVComponent=ParamsComponents.CONV,MRNNComponent=ParamsComponents.MRNN,MLPModels=require('./mlpModels.js'),Utils=require('../Utils.js'),ConvModel=require('./convModel.js');_.extend(Backbone.Model.prototype,Backbone.Validation.mixin,Utils.ApplyTypesMixin);Backbone.Validation.configure({labelFormatter:'label'});var BaseModel=Backbone.Model.extend({getBackboneModels:function(){return[this];},populate:function(params){this.set(params);},dumpParams:function(){return this.applyTypes(this.attributes);},isParamsValid:function(){return this.isValid(true);}});var AutoencoderModel=BaseModel.extend({getComponent:function(){return AutoencoderComponent({model:this});},labels:{maxnum_iter:"number of iterations",batch_size:"size of batches",hidden_outputs:"size of hidden layer",noise_level:"noise level",learning_rate_init:"learning rate",irange:"range of uniform initialization"},dumpParams:function(){var params=_.clone(this.attributes);params=this.applyTypes(params);params.learning_rate={init:params.learning_rate_init};delete params.learning_rate_init;return params;},populate:function(params){params=_.clone(params);try{params.learning_rate_init=params.learning_rate.init;delete params.learning_rate;}catch(e){}
this.set(params);},validation:{'batch_size':{required:true,pattern:'digits',range:[1,10000]},'maxnum_iter':{required:true,pattern:'digits',range:[1,1000]},'hidden_outputs':{required:false,pattern:'digits',range:[1,1000]},'noise_level':{required:false,pattern:'number',range:[1e-10,1]},'learning_rate_init':{required:false,pattern:'number',range:[1e-10,1]},'irange':{required:false,pattern:'number',range:[1e-10,1]}}});var MRNNModel=BaseModel.extend({getComponent:function(){return MRNNComponent({model:this});},labels:{maxnum_iter:"number of iterations",h:"number of hidden units",f:"number of factored units",cg_min_cg:"minimum number of conjugate gradient iterations",cg_max_cg:"maximum number of conjugate gradient iterations",lambda:"damping parameter lambda",mu:"damping parameter mu"},validation:{'maxnum_iter':{required:true,pattern:'digits',range:[1,1000]},'h':{required:false,pattern:'digits',range:[1,1000]},'f':{required:false,pattern:'digits',range:[1,1000]},'cg_min_cg':{required:false,pattern:'digits',range:[1,1000],fn:'ltMaxCg'},'cg_max_cg':{required:false,pattern:'digits',range:[1,1000],fn:'gtMinCg'},'lambda':{required:false,pattern:'number',range:[1e-6,1]},'mu':{required:false,pattern:'number',range:[1e-6,1]}},gtMinCg:function(cgMaxCg,attr,state){if(state.cg_min_cg!==undefined&&cgMaxCg!==undefined&&parseFloat(state.cg_min_cg)>parseFloat(cgMaxCg)){return"maximum # of CG iterations should be greater than minimum";}},ltMaxCg:function(cgMinCg,attr,state){if(state.cg_min_cg!==undefined&&cgMinCg!==undefined&&parseFloat(state.cg_max_cg)<parseFloat(cgMinCg)){return"minimum # of CG iterations should be lower than maximum";}}});var defaultModelParams={AUTOENCODER:{batch_size:128,maxnum_iter:100},CONV:{maxnum_iter:100,img_size:32,random_sparse:false,dropout:0.5,learning_rate_init:0.01,momentum_init:0.9,layers:[{type:'convSet',convChannels:3,convFilters:32,convPadding:2,convStride:1,convFilterSize:5,convSharedBiases:1,convDropout:0.5,poolStart:0,poolSizeX:3,poolStride:2,poolOutputsX:0,normSize:3},{type:'convSet',convChannels:32,convFilters:32,convPadding:2,convStride:1,convFilterSize:5,convSharedBiases:1,convDropout:0.5,poolStart:0,poolSizeX:3,poolStride:2,poolOutputsX:0,normSize:3},{type:'convSet',convChannels:32,convFilters:32,convPadding:2,convStride:1,convFilterSize:5,convSharedBiases:1,convDropout:0.5,poolStart:0,poolSizeX:3,poolStride:2,poolOutputsX:0,normSize:10},{type:'fc',outputs:3}]},MRNN:{maxnum_iter:20},MLP_RECTIFIED:{batch_size:128,maxnum_iter:100,percent_batches_per_iter:100,dropout:true,layers:[{type:'rectified_linear',dim:200,sparse_init:10,irange:0.005,switch_uniform_init:false},{type:'rectified_linear',dim:200,sparse_init:10,irange:0.005,switch_uniform_init:false}]},MLP_SIGMOID:{batch_size:128,maxnum_iter:100,percent_batches_per_iter:100,dropout:true,layers:[{type:'sigmoid',dim:200,sparse_init:10,irange:0.005,switch_uniform_init:false},{type:'sigmoid',dim:200,sparse_init:10,irange:0.005,switch_uniform_init:false}]},MLP_MAXOUT:{batch_size:128,maxnum_iter:100,percent_batches_per_iter:100,layers:[{type:'maxout',num_units:240,num_pieces:2,irange:0.005,switch_uniform_init:true,max_col_norm:1.9365,sparse_init:10},{type:'maxout',num_units:240,num_pieces:2,irange:0.005,switch_uniform_init:true,max_col_norm:1.9365,sparse_init:10},{type:'maxout',num_units:240,num_pieces:2,irange:0.005,switch_uniform_init:true,max_col_norm:1.9365,sparse_init:10}]},MLP_MAXOUT_CONV:{batch_size:128,maxnum_iter:100,percent_batches_per_iter:100,layers:[{type:'maxout_convolution',num_units:48,num_pieces:2,irange:0.005,pad:0,kernel_shape:8,pool_shape:4,pool_stride:2,max_kernel_norm:0.9},{type:'maxout_convolution',num_units:48,num_pieces:2,irange:0.005,pad:3,kernel_shape:8,pool_shape:4,pool_stride:2,max_kernel_norm:1.9365},{type:'maxout_convolution',num_units:24,num_pieces:4,irange:0.005,pad:3,kernel_shape:5,pool_shape:2,pool_stride:2,max_kernel_norm:1.9365}]}};function getModel(name,params){var model;switch(name){case"AUTOENCODER":model=new AutoencoderModel();break;case"CONV":model=new ConvModel();break;case"MRNN":model=new MRNNModel();break;case"MLP_RECTIFIED":model=new MLPModels.Base({model_name:name});break;case"MLP_SIGMOID":model=new MLPModels.Base({model_name:name});break;case"MLP_MAXOUT":model=new MLPModels.Maxout({model_name:name});break;case"MLP_MAXOUT_CONV":model=new MLPModels.MaxoutConv({model_name:name});break;default:console.log('Error, invalid model name: '+name);}
if(params){model.populate(params);}else{model.populate(defaultModelParams[name]);}
return model;}
module.exports={getModel:getModel};},{"../Utils.js":6,"./Components.jsx":13,"./convModel.js":15,"./mlpModels.js":18}],15:[function(require,module,exports){"use strict";var ConvModelComponent=require('./cudaConvComponents2.jsx'),Utils=require('../Utils.js');_.extend(Backbone.Model.prototype,Backbone.Validation.mixin,Utils.ApplyTypesMixin);Backbone.Validation.configure({labelFormatter:'label'});var ConvSetLayer=Backbone.Model.extend({dumpParams:function(){var params=_.clone(this.attributes);return this.applyTypes(params);},isParamsValid:function(){var params=_.clone(this.attributes);this.validate();return this.isValid(_.keys(params));},labels:{convChannels:"number of channels",convFilters:"number of filters",convFilterSize:"filter size",convSharedBiases:"shared biases",convDropout:"dropout",poolStart:"start",poolSizeX:"sizeX",poolStride:"stride",poolOutputsX:"outputsX",normSize:"size",},validation:{'convChannels':{required:true,pattern:'digits',fn:'validateChannels'},'convFilters':{required:true,pattern:'digits',fn:'validateFilters'},'convFilterSize':{required:true,pattern:'digits',},'convSharedBiases':{required:true,pattern:'digits',},'convDropout':{required:true,pattern:'number',range:[0,1]},'poolStart':{required:true,pattern:'number',min:0},'poolSizeX':{required:true,pattern:'number',min:0},'poolStride':{required:true,pattern:'number',min:0},'poolOutputsX':{required:true,pattern:'number',min:0},'normSize':{required:true,pattern:'number',min:0}},validateChannels:function(value,attr,computedState){value=parseInt(value);if(value<4){if((value!==1)&&(value!==2)&&(value!==3)){return"ConvLayer channels value is invalid.";}}else{if(value%4){return"ConvLayer channels value is invalid. Channel value greater than 3 must be divisible by 4.";}}},validateFilters:function(value,attr,computedState){value=parseInt(value);if(!((value>=16)&&(value%16===0))){return"ConvLayer filters value is invalid. Must be divisible by 16.";}}});var FCLayer=Backbone.Model.extend({dumpParams:function(){var params=_.clone(this.attributes);return this.applyTypes(params);},isParamsValid:function(){var params=_.clone(this.attributes);this.validate();return this.isValid(_.keys(params));},labels:{'outputs':'outputs'},validation:{'outputs':{required:true,pattern:'number',min:0}}});var LayersList=Backbone.Collection.extend({isParamsValid:function(){if(this.length>0){return this.reduce(function(prev,cur){return prev&&cur.isParamsValid();},true);}},dumpParams:function(){var params;return this.map(function(layer,i){params=layer.dumpParams();params.layer_name='h'+i;return params;});},getDefaultConvSetLayer:function(){return{type:'convSet',convChannels:32,convFilters:32,convPadding:2,convStride:1,convFilterSize:5,convSharedBiases:1,convDropout:0.5,poolStart:0,poolSizeX:3,poolStride:2,poolOutputsX:0,normSize:10};},getDefaultFCLayer:function(){return{type:'fc',outputs:10};},model:function(attrs,options){switch(attrs.type){case"convSet":return new ConvSetLayer(attrs,options);case"fc":return new FCLayer(attrs,options);}},});var ConvModel=Backbone.Model.extend({initialize:function(){this.initLayers();},getBackboneModels:function(){return[this,this.layers];},initLayers:function(layers){this.layers=new LayersList(layers);},createModels:function(layers){return layers.map(function(layer){if(layer.type==='convSet'){return new ConvSetLayer(layer);}
return new FCLayer(layer);});},getComponent:function(){return ConvModelComponent({model:this});},dumpParams:function(){var params=_.clone(this.attributes);delete params.model_name;params.layers=this.layers.dumpParams();this.applyTypes(params);params.learning_rate={init:params.learning_rate_init};params.momentum={init:params.momentum_init};delete params.learning_rate_init;delete params.momentum_init;return params;},isParamsValid:function(){return this.isValid(true)&&this.layers.isParamsValid();},populate:function(params){params=_.clone(params);this.layers.reset(this.createModels(params.layers));this.layers.trigger('add');delete params.layers;this.set(params);},labels:{maxnum_iter:"number of iterations",img_size:"image size",learning_rate_init:"learning rate",momentum_init:"momentum",rand_sparse:'Random sparse'},validation:{'maxnum_iter':{required:true,pattern:'digits',range:[1,10000]},'img_size':{required:true,pattern:'digits',range:[8,128],fn:'divByEight'},'learning_rate_init':{required:false,pattern:'number',range:[1e-10,1]},'dropout':{required:false,pattern:'number',range:[0,1]},'momentum_init':{required:false,pattern:'number',range:[1e-10,1]}},divByEight:function(img_size,attr,state){if(img_size%8!==0){return"must be a multiple of 8";}}});module.exports=ConvModel;},{"../Utils.js":6,"./cudaConvComponents2.jsx":16}],16:[function(require,module,exports){"use strict";var ParamsComponents=require('./Components.jsx');var ParamInput=ParamsComponents.input;var ParamSlider=ParamsComponents.slider;var ParamSwitch=ParamsComponents.switch;var ParamCheckbox=ParamsComponents.checkbox;var Bootstrap=require('../bootstrap.jsx');var BootstrapButton=Bootstrap.Button;var Utils=require('../Utils.js');var ConvLayerComponent=React.createClass({displayName:'ConvLayerComponent',render:function(){var model=this.props.model;var errors=this.props.model.validate()||{};return(React.DOM.div(null,React.DOM.div(null,React.DOM.div({className:"layer-heading clearfix"},React.DOM.h4({className:"select-item"},"Convolutional Layer: ",React.DOM.em(null,this.props.key),BootstrapButton({className:"btn btn-mini btn-danger pull-right",href:"#",onClick:this.props.handleDelete},"Delete"))),React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"convChannels",label:this.props.model.labels.convChannels,model:model,errors:errors,placeholder:3}),ParamInput({key:"convFilters",label:this.props.model.labels.convFilters,model:model,errors:errors,placeholder:32}),ParamInput({key:"convFilterSize",label:this.props.model.labels.convFilterSize,model:model,errors:errors,placeholder:5}),ParamInput({key:"convSharedBiases",label:this.props.model.labels.convSharedBiases,model:model,errors:errors,placeholder:1}),ParamInput({key:"convDropout",label:this.props.model.labels.convDropout,model:model,errors:errors,placeholder:0.5})))),React.DOM.div(null,React.DOM.div({className:"layer-heading clearfix"},React.DOM.h4({className:"select-item"},"Pool Layer: ",React.DOM.em(null,this.props.key))),React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"poolStart",label:this.props.model.labels.poolStart,model:model,errors:errors,placeholder:0}),ParamInput({key:"poolSizeX",label:this.props.model.labels.poolSizeX,model:model,errors:errors,placeholder:3}),ParamInput({key:"poolStride",label:this.props.model.labels.poolStride,model:model,errors:errors,placeholder:2}),ParamInput({key:"poolOutputsX",label:this.props.model.labels.poolOutputsX,model:model,errors:errors,placeholder:0})))),React.DOM.div(null,React.DOM.div({className:"layer-heading clearfix"},React.DOM.h4({className:"select-item"},"Normalization Layer: ",React.DOM.em(null,this.props.key))),React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"normSize",label:this.props.model.labels.normSize,model:model,errors:errors,placeholder:3}))))));}});var FCLayerComponent=React.createClass({displayName:'FCLayerComponent',render:function(){var model=this.props.model;var errors=this.props.model.validate()||{};return(React.DOM.div(null,React.DOM.div({className:"layer-heading clearfix"},React.DOM.h4({className:"select-item"},"FC Layer: ",React.DOM.em(null,this.props.key),BootstrapButton({className:"btn btn-mini btn-danger pull-right",href:"#",onClick:this.props.handleDelete},"Delete"))),React.DOM.table({className:"table-params"},React.DOM.tbody(null))));}});var LayersComponent=React.createClass({displayName:'LayersComponent',clickDelete:function(model){this.props.layers.remove(model);},addConvSetLayer:function(e){e.preventDefault();var defaultConv=this.props.layers.getDefaultConvSetLayer();this.props.layers.add([defaultConv]);},addFCLayer:function(e){e.preventDefault();var defaultFC=this.props.layers.getDefaultFCLayer();this.props.layers.add([defaultFC]);},render:function(){var layersList=this.props.layers.map(function(layer,i){if(layer.get('type')==='convSet'){return ConvLayerComponent({model:layer,key:'layer'+i,handleDelete:this.clickDelete.bind(this,layer)});}
return FCLayerComponent({model:layer,key:'layer'+i,handleDelete:this.clickDelete.bind(this,layer)});},this);return(React.DOM.div({className:"layer-params"},BootstrapButton({className:"btn btn-mini btn-success pull-right",href:"#",onClick:this.addConvSetLayer},React.DOM.i({className:"icon icon-white icon-plus"}),"Add Conv Layer"),BootstrapButton({className:"btn btn-mini btn-sccess pull-right",href:"#",onClick:this.addFCLayer},React.DOM.i({className:"icon icon-white icon-plus"}),"Add FC Layer"),React.DOM.h2(null,"Layer params"),layersList));}});var CONVComponent=React.createClass({displayName:'CONVComponent',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.model];},render:function(){var model=this.props.model,errors=this.props.model.validate()||{};return(React.DOM.div(null,React.DOM.h4({className:"select-item text-center"},"Model params "),React.DOM.div(null,React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"maxnum_iter",label:"number of iterations",model:model,errors:errors}),ParamInput({key:"img_size",label:"image size",help:"must be a multiple of 8",model:model,errors:errors}),ParamInput({key:"dropout",label:"dropout",model:model,errors:errors,placeholder:0.5}),ParamInput({key:"learning_rate_init",label:"learning rate",model:model,errors:errors,placeholder:0.001}),ParamInput({key:"momentum_init",label:"momentum",model:model,errors:errors,placeholder:0.5}),ParamCheckbox({key:"random_sparse",label:"Use random sparse layers",model:model,errors:errors})))),LayersComponent({layers:this.props.model.layers})));}});module.exports=CONVComponent;},{"../Utils.js":6,"../bootstrap.jsx":9,"./Components.jsx":13}],17:[function(require,module,exports){"use strict";var ParamsComponents=require('./Components.jsx'),ParamInput=ParamsComponents.input,ParamSlider=ParamsComponents.slider,ParamSwitch=ParamsComponents.switch,ParamCheckbox=ParamsComponents.checkbox,Bootstrap=require('../bootstrap.jsx'),Utils=require('../Utils.js'),BootstrapButton=Bootstrap.Button;var MLPLayer=React.createClass({displayName:'MLPLayer',render:function(){var model=this.props.model,errors=this.props.model.validate()||{},init=null,switch_uniform=null;if(this.props.model.get('switch_uniform_init')){init=ParamInput({key:"irange",label:"Range of uniform initialization",model:model,errors:errors});}else{init=ParamSlider({key:"sparse_init",label:"Initial sparseness",help:"This defines the percentage of incoming weights per neuron that are non-zero at initialization. If you're not sure, leave it at 10%.",model:model,errors:errors});}
if(this.props.model.get('out_nonlin')!='LINEARGAUSSIAN')
switch_uniform=ParamSwitch({key:"switch_uniform_init",label:"Uniform initialization",model:model,errors:errors});return(React.DOM.div(null,React.DOM.div({className:"layer-heading clearfix"},BootstrapButton({className:"btn btn-mini btn-danger pull-right",href:"#",onClick:this.props.handleDeleteLayer},React.DOM.i({className:"icon icon-white icon-remove"}),"Delete Layer"),React.DOM.h4({className:"select-item"},"MLP Layer: ",React.DOM.em(null,this.props.key))),React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"dim",label:"Number of hidden units",model:model,errors:errors,placeholder:200}),switch_uniform,init))));}});var MaxoutLayer=React.createClass({displayName:'MaxoutLayer',render:function(){var model=this.props.model,errors=this.props.model.validate()||{},init=null;if(this.props.model.get('switch_uniform_init')){init=ParamInput({key:"irange",label:"Range of uniform initialization",model:model,errors:errors,placeholder:0.005});}else{init=ParamSlider({key:"sparse_init",label:"Initial sparseness",help:"This defines the percentage of incoming weights per neuron that are non-zero at initialization. If you're not sure, leave it at 10%.",model:model,errors:errors});}
return(React.DOM.div(null,React.DOM.div({className:"layer-heading clearfix"},BootstrapButton({className:"btn btn-mini btn-danger pull-right",href:"#",onClick:this.props.handleDeleteLayer},React.DOM.i({className:"icon icon-white icon-remove"}),"Delete Layer"),React.DOM.h4({className:"select-item"},"Maxout Layer: ",React.DOM.em(null,this.props.key))),React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"num_units",label:"Number of hidden units",model:model,errors:errors,placeholder:240}),ParamInput({key:"num_pieces",label:"Number of pieces",model:model,errors:errors,placeholder:2}),ParamInput({key:"max_col_norm",label:"Max column norm",model:model,errors:errors,placeholder:1.9365}),ParamSwitch({key:"switch_uniform_init",label:"Uniform initialization",model:model,errors:errors}),init))));}});var MaxoutConvLayer=React.createClass({displayName:'MaxoutConvLayer',render:function(){var model=this.props.model,errors=this.props.model.validate()||{};return(React.DOM.div(null,React.DOM.div({className:"layer-heading clearfix"},BootstrapButton({className:"btn btn-mini btn-danger pull-right",href:"#",onClick:this.props.handleDeleteLayer},React.DOM.i({className:"icon icon-white icon-remove"}),"Delete Layer"),React.DOM.h4({className:"select-item"},"Maxout Layer: ",React.DOM.em(null,this.props.key))),React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"num_units",label:"Number of hidden units",model:model,errors:errors,placeholder:48}),ParamInput({key:"num_pieces",label:"Number of pieces",model:model,errors:errors,placeholder:2}),ParamInput({key:"kernel_shape",label:"Kernel shape",model:model,errors:errors,placeholder:8}),ParamInput({key:"pool_shape",label:"Pool shape",model:model,errors:errors,placeholder:4}),ParamInput({key:"pad",label:"Padding",model:model,errors:errors,placeholder:0}),ParamInput({key:"pool_stride",label:"Pool stride",model:model,errors:errors,placeholder:2}),ParamInput({key:"max_kernel_norm",label:"Max kernel norm",model:model,errors:errors,placeholder:0.9}),ParamInput({key:"irange",label:"Range of uniform initialization",model:model,errors:errors,placeholder:0.005})))));}});var LayersList=React.createClass({displayName:'LayersList',addLayer:function(e){e.preventDefault();this.props.layers.add([this.props.model.getDefaultLayer()]);},deleteLayer:function(i,e){e.preventDefault();this.props.layers.remove(this.props.layers.at(i));},render:function(){var modelName=this.props.model.get('model_name'),layers=this.props.layers.map(function(layer,i){if(modelName==='MLP_MAXOUT_CONV'){return MaxoutConvLayer({model:layer,key:'h'+i,handleDeleteLayer:this.deleteLayer.bind(this,i)});}else if(modelName==='MLP_MAXOUT'){return MaxoutLayer({model:layer,key:'h'+i,handleDeleteLayer:this.deleteLayer.bind(this,i)});}else{return MLPLayer({model:layer,key:'h'+i,handleDeleteLayer:this.deleteLayer.bind(this,i)});}},this);if(layers.length===0){layers=React.DOM.div({className:"settings-error"},React.DOM.p(null,"Add at least one layer"));}
return(React.DOM.div({className:"layer-params"},BootstrapButton({className:"btn btn-mini btn-success pull-right",href:"#",onClick:this.addLayer},React.DOM.i({className:"icon icon-white icon-plus"}),"Add Layer"),React.DOM.h2(null,"Layer params"),layers));}});var LearningRateComponent=React.createClass({displayName:'LearningRateComponent',render:function(){var model=this.props.model,errors=this.props.model.validate()||{},component=null;if(!model.get('constant')){component=[ParamInput({key:"final",label:"final learning rate",model:model,errors:errors,placeholder:0.01}),ParamInput({key:"decay_factor",label:"divide learning rate by this after each GD step",model:model,errors:errors,placeholder:1.00004})];}
return(React.DOM.div(null,React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"init",label:"initial learning rate",model:model,errors:errors,placeholder:0.1}),ParamCheckbox({key:"constant",label:"use constant learning rate",model:model,errors:errors}),component))));}});var MomentumComponent=React.createClass({displayName:'MomentumComponent',render:function(){var model=this.props.model,errors=this.props.model.validate()||{},component=null;if(!model.get('constant')){component=[ParamInput({key:"final",label:"final momentum",model:model,errors:errors,placeholder:0.95}),ParamInput({key:"start",label:"start increase momentum on this iteration",model:model,errors:errors,placeholder:1}),ParamInput({key:"stop",label:"on this iteration momentum will take it's final value",model:model,errors:errors,placeholder:20})];}
return(React.DOM.div(null,React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"init",label:"initial momentum",model:model,errors:errors,placeholder:0.5}),ParamCheckbox({key:"constant",label:"use constant momentum",model:model,errors:errors}),component))));}});var MLPComponent=React.createClass({displayName:'MLPComponent',mixins:[Utils.BackboneMixin],getBackboneModels:function(){return[this.props.model];},render:function(){var model=this.props.model,errors=this.props.model.validate()||{},dropout=null;if(this.props.withDropout){dropout=ParamCheckbox({key:"dropout",label:"use dropout?",model:model,errors:errors});}
return(React.DOM.div(null,React.DOM.h4({className:"select-item text-center"},"Model params"),React.DOM.div(null,React.DOM.table({className:"table-params"},React.DOM.tbody(null,ParamInput({key:"maxnum_iter",label:"number of iterations",model:model,errors:errors}),ParamInput({key:"batch_size",label:"size of batches",model:model,errors:errors}),ParamSlider({key:"percent_batches_per_iter",label:'number of batches to proccess per iteration',model:model}),dropout))),LearningRateComponent({model:this.props.model.learningRateModel}),MomentumComponent({model:this.props.model.momentumModel}),LayersList({layers:this.props.model.layers,model:this.props.model})));}});module.exports={mlp:MLPComponent};},{"../Utils.js":6,"../bootstrap.jsx":9,"./Components.jsx":13}],18:[function(require,module,exports){"use strict";var mlpComponents=require('./mlpComponents.jsx'),MLPModelComponent=mlpComponents.mlp,Utils=require('../Utils.js');_.extend(Backbone.Model.prototype,Backbone.Validation.mixin,Utils.ApplyTypesMixin);Backbone.Validation.configure({labelFormatter:'label'});var BaseLayer=Backbone.Model.extend({initialize:function(){if(this.get('switch_uniform_init')===undefined){if(this.get('irange')===undefined){this.set('switch_uniform_init',false);}else{this.set('switch_uniform_init',true);}}},dumpParams:function(){var params=_.clone(this.attributes);params=this.selectWeightInit(params);return this.applyTypes(params);},isParamsValid:function(){var params=_.clone(this.labels);this.validate();params=this.selectWeightInit(params);return this.isValid(_.keys(params));},selectWeightInit:function(params){if(this.get('switch_uniform_init')){delete params.sparse_init;}else{delete params.irange;}
delete params.switch_uniform_init;return params;},labels:{'irange':"Range of uniform initialization",'switch_uniform_init':"",'sparse_init':"Initial sparseness",'dim':"Number of hidden units"},validation:{'dim':{required:true,pattern:'digits',range:[1,1000]},'sparse_init':{required:true,pattern:'digits',range:[0,100]},'irange':{required:true,pattern:'number',range:[1e-10,1]}}});var BaseLayersList=Backbone.Collection.extend({model:BaseLayer,isParamsValid:function(){if(this.length>0){return this.reduce(function(prev,cur){return prev&&cur.isParamsValid();},true);}},dumpParams:function(){var params;return this.map(function(layer,i){params=layer.dumpParams();params.layer_name='h'+i;return params;});}});var MaxoutLayer=BaseLayer.extend({labels:{'num_units':'Number of hidden units','num_pieces':'Number of pieces','irange':"Range of uniform initialization",'switch_uniform_init':"",'sparse_init':"Initial sparseness",'max_col_norm':'Max column norm'},validation:{'num_units':{required:true,pattern:'digits',range:[1,1000]},'num_pieces':{required:true,pattern:'digits',range:[1,1000]},'irange':{required:true,pattern:'number',range:[1e-10,1]},'sparse_init':{required:true,pattern:'digits',range:[0,100]},'max_col_norm':{required:true,pattern:'number',min:0.1}}});var MaxoutLayersList=BaseLayersList.extend({model:MaxoutLayer});var MaxoutConvLayer=BaseLayer.extend({initialize:function(){},labels:{'num_units':'Number of hidden units','num_pieces':'Number of pieces','irange':'Range of uniform initialization','kernel_shape':'Kernel shape','pool_shape':'Pool shape','pad':'Padding','pool_stride':'Pool stride','max_kernel_norm':'Max kernel norm'},selectWeightInit:function(params){return params;},validation:{'num_units':{required:true,pattern:'digits',range:[1,1000]},'num_pieces':{required:true,pattern:'digits',range:[1,1000]},'irange':{required:true,pattern:'number',range:[1e-10,1]},'kernel_shape':{required:true,pattern:'digits',range:[1,1000]},'pool_shape':{required:true,pattern:'digits',range:[1,1000]},'pad':{required:true,pattern:'digits',range:[0,1000]},'pool_stride':{required:true,pattern:'digits',range:[0,1000]},'max_kernel_norm':{required:true,pattern:'number',min:0.1}}});var MaxoutConvLayersList=BaseLayersList.extend({model:MaxoutConvLayer});var LearningRateModel=Backbone.Model.extend({dumpParams:function(){var params=_.clone(this.attributes);if(params.constant){params={init:params.init,constant:true};}
return this.applyTypes(params);},isParamsValid:function(){this.validate();if(this.get('constant')){return this.isValid('init');}else{return this.isValid();}},labels:{'constant':'','init':'initial learning rate','final':'final learning rate','decay_factor':'Decay factor'},validation:{'init':{required:false,pattern:'number',range:[1e-10,100]},'final':{required:false,pattern:'number',range:[1e-10,100],fn:'gtInit'},'decay_factor':{required:false,pattern:'number',range:[1,100]}},gtInit:function(fin,attr,state){if(state.init!==undefined&&fin!==undefined&&parseFloat(state.init)<=parseFloat(fin)){return"should be lower then initial";}}});var MomentumModel=Backbone.Model.extend({dumpParams:function(){var params=_.clone(this.attributes);if(params.constant){params={init:params.init,constant:true};}
return this.applyTypes(params);},isParamsValid:function(){this.validate();if(this.get('constant')){return this.isValid('init');}else{return this.isValid();}},labels:{'constant':'','init':'initial momentum','final':'final momentum','start':'start','stop':"stop"},validation:{'init':{required:false,pattern:'number',range:[1e-10,10]},'final':{required:false,pattern:'number',range:[1e-10,10],fn:'gtInit'},'start':{required:false,pattern:'digits',range:[1,10000]},'stop':{required:false,pattern:'digits',range:[1,10000],fn:'gtStart'},},gtInit:function(fin,attr,state){if(state.init!==undefined&&fin!==undefined&&parseFloat(state.init)>=parseFloat(fin)){return"should be greate then initial";}},gtStart:function(stop,attr,state){if(state.start!==undefined&&stop!==undefined&&parseInt(state.start,10)>=parseInt(stop,10)){return"should be greate then start";}}});var BaseModel=Backbone.Model.extend({initialize:function(){this.learningRateModel=new LearningRateModel();this.momentumModel=new MomentumModel();switch(this.get('model_name')){case"MLP_RECTIFIED":this.set('layer_type','rectified_linear');break;case"MLP_SIGMOID":this.set('layer_type','sigmoid');break;case"MLP_MAXOUT":this.set('layer_type','maxout');break;case"MLP_MAXOUT_CONV":this.set('layer_type','maxout_convolution');break;}
this.initLayers();},populate:function(params){params=_.clone(params);this.learningRateModel.set(params.learning_rate);delete params.learning_rate;this.momentumModel.set(params.momentum);delete params.momentum;this.layers.reset(params.layers);this.layers.trigger('add');delete params.layers;this.set(params);},getComponent:function(){return MLPModelComponent({model:this,withDropout:true});},getBackboneModels:function(){return[this,this.learningRateModel,this.momentumModel,this.layers];},initLayers:function(layers){this.layers=new BaseLayersList(layers);},getDefaultLayer:function(){if(this.attributes.out_nonlin==='LINEARGAUSSIAN'){return{type:this.get('layer_type'),dim:200,irange:0.005,switch_uniform_init:true,out_nonlin:'LINEARGAUSSIAN'};}else{return{type:this.get('layer_type'),dim:200,sparse_init:10,irange:0.005,switch_uniform_init:false};}},dumpParams:function(){var params=_.clone(this.attributes);delete params.model_name;delete params.layer_type;params.learning_rate=this.learningRateModel.dumpParams();params.momentum=this.momentumModel.dumpParams();params.layers=this.layers.dumpParams();return this.applyTypes(params);},isParamsValid:function(){return this.isValid(true)&&this.learningRateModel.isParamsValid()&&this.momentumModel.isParamsValid()&&this.layers.isParamsValid();},labels:{batch_size:'size of batches',maxnum_iter:'number of iterations',percent_batches_per_iter:'number of batches to proccess per iteration'},validation:{'batch_size':{required:true,pattern:'digits',range:[10,10000]},'maxnum_iter':{required:true,pattern:'digits',range:[1,10000]},'percent_batches_per_iter':{required:true,pattern:'digits',range:[0,100]}}});var MaxoutModel=BaseModel.extend({initLayers:function(layers){this.layers=new MaxoutLayersList(layers);},getComponent:function(){return MLPModelComponent({model:this,withDropout:false});},getDefaultLayer:function(){return{type:this.get('layer_type'),num_units:240,num_pieces:2,irange:0.005,switch_uniform_init:true,max_col_norm:1.9365,sparse_init:10};}});var MaxoutConvModel=BaseModel.extend({initLayers:function(layers){this.layers=new MaxoutConvLayersList(layers);},getComponent:function(){return MLPModelComponent({model:this,withDropout:false});},selectWeightInit:function(params){return params;},getDefaultLayer:function(){return{type:this.get('layer_type'),num_units:48,num_pieces:2,irange:0.005,pad:0,kernel_shape:8,pool_shape:4,pool_stride:2,max_kernel_norm:1.9365,};}});module.exports={Base:BaseModel,MaxoutConv:MaxoutConvModel,Maxout:MaxoutModel};},{"../Utils.js":6,"./mlpComponents.jsx":17}]},{},[4])